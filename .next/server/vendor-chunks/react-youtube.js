"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-youtube";
exports.ids = ["vendor-chunks/react-youtube"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-youtube/dist/YouTube.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/react-youtube/dist/YouTube.esm.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ YouTube_default)\n/* harmony export */ });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fast-deep-equal */ \"(ssr)/./node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var youtube_player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! youtube-player */ \"(ssr)/./node_modules/youtube-player/dist/index.js\");\n/* harmony import */ var youtube_player__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(youtube_player__WEBPACK_IMPORTED_MODULE_2__);\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)){\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    }\n    return a;\n};\nvar __spreadProps = (a, b)=>__defProps(a, __getOwnPropDescs(b));\nvar __async = (__this, __arguments, generator)=>{\n    return new Promise((resolve, reject)=>{\n        var fulfilled = (value)=>{\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var rejected = (value)=>{\n            try {\n                step(generator.throw(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var step = (x)=>x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n        step((generator = generator.apply(__this, __arguments)).next());\n    });\n};\n// src/YouTube.tsx\n\n\n\n\nfunction shouldUpdateVideo(prevProps, props) {\n    var _a, _b;\n    if (prevProps.videoId !== props.videoId) {\n        return true;\n    }\n    const prevVars = ((_a = prevProps.opts) == null ? void 0 : _a.playerVars) || {};\n    const vars = ((_b = props.opts) == null ? void 0 : _b.playerVars) || {};\n    return prevVars.start !== vars.start || prevVars.end !== vars.end;\n}\nfunction filterResetOptions(opts = {}) {\n    return __spreadProps(__spreadValues({}, opts), {\n        height: 0,\n        width: 0,\n        playerVars: __spreadProps(__spreadValues({}, opts.playerVars), {\n            autoplay: 0,\n            start: 0,\n            end: 0\n        })\n    });\n}\nfunction shouldResetPlayer(prevProps, props) {\n    return prevProps.videoId !== props.videoId || !fast_deep_equal__WEBPACK_IMPORTED_MODULE_1___default()(filterResetOptions(prevProps.opts), filterResetOptions(props.opts));\n}\nfunction shouldUpdatePlayer(prevProps, props) {\n    var _a, _b, _c, _d;\n    return prevProps.id !== props.id || prevProps.className !== props.className || ((_a = prevProps.opts) == null ? void 0 : _a.width) !== ((_b = props.opts) == null ? void 0 : _b.width) || ((_c = prevProps.opts) == null ? void 0 : _c.height) !== ((_d = props.opts) == null ? void 0 : _d.height) || prevProps.iframeClassName !== props.iframeClassName || prevProps.title !== props.title;\n}\nvar defaultProps = {\n    videoId: \"\",\n    id: \"\",\n    className: \"\",\n    iframeClassName: \"\",\n    style: {},\n    title: \"\",\n    loading: void 0,\n    opts: {},\n    onReady: ()=>{},\n    onError: ()=>{},\n    onPlay: ()=>{},\n    onPause: ()=>{},\n    onEnd: ()=>{},\n    onStateChange: ()=>{},\n    onPlaybackRateChange: ()=>{},\n    onPlaybackQualityChange: ()=>{}\n};\nvar propTypes = {\n    videoId: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),\n    id: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),\n    className: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),\n    iframeClassName: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),\n    style: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().object),\n    title: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),\n    loading: prop_types__WEBPACK_IMPORTED_MODULE_3___default().oneOf([\n        \"lazy\",\n        \"eager\"\n    ]),\n    opts: prop_types__WEBPACK_IMPORTED_MODULE_3___default().objectOf((prop_types__WEBPACK_IMPORTED_MODULE_3___default().any)),\n    onReady: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n    onError: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n    onPlay: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n    onPause: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n    onEnd: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n    onStateChange: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n    onPlaybackRateChange: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n    onPlaybackQualityChange: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func)\n};\nvar _YouTube = class extends (react__WEBPACK_IMPORTED_MODULE_0___default().Component) {\n    constructor(props){\n        super(props);\n        this.destroyPlayerPromise = void 0;\n        this.onPlayerReady = (event)=>{\n            var _a, _b;\n            return (_b = (_a = this.props).onReady) == null ? void 0 : _b.call(_a, event);\n        };\n        this.onPlayerError = (event)=>{\n            var _a, _b;\n            return (_b = (_a = this.props).onError) == null ? void 0 : _b.call(_a, event);\n        };\n        this.onPlayerStateChange = (event)=>{\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            (_b = (_a = this.props).onStateChange) == null ? void 0 : _b.call(_a, event);\n            switch(event.data){\n                case _YouTube.PlayerState.ENDED:\n                    (_d = (_c = this.props).onEnd) == null ? void 0 : _d.call(_c, event);\n                    break;\n                case _YouTube.PlayerState.PLAYING:\n                    (_f = (_e = this.props).onPlay) == null ? void 0 : _f.call(_e, event);\n                    break;\n                case _YouTube.PlayerState.PAUSED:\n                    (_h = (_g = this.props).onPause) == null ? void 0 : _h.call(_g, event);\n                    break;\n                default:\n            }\n        };\n        this.onPlayerPlaybackRateChange = (event)=>{\n            var _a, _b;\n            return (_b = (_a = this.props).onPlaybackRateChange) == null ? void 0 : _b.call(_a, event);\n        };\n        this.onPlayerPlaybackQualityChange = (event)=>{\n            var _a, _b;\n            return (_b = (_a = this.props).onPlaybackQualityChange) == null ? void 0 : _b.call(_a, event);\n        };\n        this.destroyPlayer = ()=>{\n            if (this.internalPlayer) {\n                this.destroyPlayerPromise = this.internalPlayer.destroy().then(()=>this.destroyPlayerPromise = void 0);\n                return this.destroyPlayerPromise;\n            }\n            return Promise.resolve();\n        };\n        this.createPlayer = ()=>{\n            if (typeof document === \"undefined\") return;\n            if (this.destroyPlayerPromise) {\n                this.destroyPlayerPromise.then(this.createPlayer);\n                return;\n            }\n            const playerOpts = __spreadProps(__spreadValues({}, this.props.opts), {\n                videoId: this.props.videoId\n            });\n            this.internalPlayer = youtube_player__WEBPACK_IMPORTED_MODULE_2___default()(this.container, playerOpts);\n            this.internalPlayer.on(\"ready\", this.onPlayerReady);\n            this.internalPlayer.on(\"error\", this.onPlayerError);\n            this.internalPlayer.on(\"stateChange\", this.onPlayerStateChange);\n            this.internalPlayer.on(\"playbackRateChange\", this.onPlayerPlaybackRateChange);\n            this.internalPlayer.on(\"playbackQualityChange\", this.onPlayerPlaybackQualityChange);\n            if (this.props.title || this.props.loading) {\n                this.internalPlayer.getIframe().then((iframe)=>{\n                    if (this.props.title) iframe.setAttribute(\"title\", this.props.title);\n                    if (this.props.loading) iframe.setAttribute(\"loading\", this.props.loading);\n                });\n            }\n        };\n        this.resetPlayer = ()=>this.destroyPlayer().then(this.createPlayer);\n        this.updatePlayer = ()=>{\n            var _a;\n            (_a = this.internalPlayer) == null ? void 0 : _a.getIframe().then((iframe)=>{\n                if (this.props.id) iframe.setAttribute(\"id\", this.props.id);\n                else iframe.removeAttribute(\"id\");\n                if (this.props.iframeClassName) iframe.setAttribute(\"class\", this.props.iframeClassName);\n                else iframe.removeAttribute(\"class\");\n                if (this.props.opts && this.props.opts.width) iframe.setAttribute(\"width\", this.props.opts.width.toString());\n                else iframe.removeAttribute(\"width\");\n                if (this.props.opts && this.props.opts.height) iframe.setAttribute(\"height\", this.props.opts.height.toString());\n                else iframe.removeAttribute(\"height\");\n                if (this.props.title) iframe.setAttribute(\"title\", this.props.title);\n                else iframe.setAttribute(\"title\", \"YouTube video player\");\n                if (this.props.loading) iframe.setAttribute(\"loading\", this.props.loading);\n                else iframe.removeAttribute(\"loading\");\n            });\n        };\n        this.getInternalPlayer = ()=>{\n            return this.internalPlayer;\n        };\n        this.updateVideo = ()=>{\n            var _a, _b, _c, _d;\n            if (typeof this.props.videoId === \"undefined\" || this.props.videoId === null) {\n                (_a = this.internalPlayer) == null ? void 0 : _a.stopVideo();\n                return;\n            }\n            let autoplay = false;\n            const opts = {\n                videoId: this.props.videoId\n            };\n            if ((_b = this.props.opts) == null ? void 0 : _b.playerVars) {\n                autoplay = this.props.opts.playerVars.autoplay === 1;\n                if (\"start\" in this.props.opts.playerVars) {\n                    opts.startSeconds = this.props.opts.playerVars.start;\n                }\n                if (\"end\" in this.props.opts.playerVars) {\n                    opts.endSeconds = this.props.opts.playerVars.end;\n                }\n            }\n            if (autoplay) {\n                (_c = this.internalPlayer) == null ? void 0 : _c.loadVideoById(opts);\n                return;\n            }\n            (_d = this.internalPlayer) == null ? void 0 : _d.cueVideoById(opts);\n        };\n        this.refContainer = (container)=>{\n            this.container = container;\n        };\n        this.container = null;\n        this.internalPlayer = null;\n    }\n    componentDidMount() {\n        this.createPlayer();\n    }\n    componentDidUpdate(prevProps) {\n        return __async(this, null, function*() {\n            if (shouldUpdatePlayer(prevProps, this.props)) {\n                this.updatePlayer();\n            }\n            if (shouldResetPlayer(prevProps, this.props)) {\n                yield this.resetPlayer();\n            }\n            if (shouldUpdateVideo(prevProps, this.props)) {\n                this.updateVideo();\n            }\n        });\n    }\n    componentWillUnmount() {\n        this.destroyPlayer();\n    }\n    render() {\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n            className: this.props.className,\n            style: this.props.style\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n            id: this.props.id,\n            className: this.props.iframeClassName,\n            ref: this.refContainer\n        }));\n    }\n};\nvar YouTube = _YouTube;\nYouTube.propTypes = propTypes;\nYouTube.defaultProps = defaultProps;\nYouTube.PlayerState = {\n    UNSTARTED: -1,\n    ENDED: 0,\n    PLAYING: 1,\n    PAUSED: 2,\n    BUFFERING: 3,\n    CUED: 5\n};\nvar YouTube_default = YouTube;\n //# sourceMappingURL=YouTube.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QteW91dHViZS9kaXN0L1lvdVR1YmUuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFlBQVlDLE9BQU9DLGNBQWM7QUFDckMsSUFBSUMsYUFBYUYsT0FBT0csZ0JBQWdCO0FBQ3hDLElBQUlDLG9CQUFvQkosT0FBT0sseUJBQXlCO0FBQ3hELElBQUlDLHNCQUFzQk4sT0FBT08scUJBQXFCO0FBQ3RELElBQUlDLGVBQWVSLE9BQU9TLFNBQVMsQ0FBQ0MsY0FBYztBQUNsRCxJQUFJQyxlQUFlWCxPQUFPUyxTQUFTLENBQUNHLG9CQUFvQjtBQUN4RCxJQUFJQyxrQkFBa0IsQ0FBQ0MsS0FBS0MsS0FBS0MsUUFBVUQsT0FBT0QsTUFBTWYsVUFBVWUsS0FBS0MsS0FBSztRQUFFRSxZQUFZO1FBQU1DLGNBQWM7UUFBTUMsVUFBVTtRQUFNSDtJQUFNLEtBQUtGLEdBQUcsQ0FBQ0MsSUFBSSxHQUFHQztBQUMxSixJQUFJSSxpQkFBaUIsQ0FBQ0MsR0FBR0M7SUFDdkIsSUFBSyxJQUFJQyxRQUFRRCxLQUFNQSxDQUFBQSxJQUFJLENBQUMsR0FDMUIsSUFBSWQsYUFBYWdCLElBQUksQ0FBQ0YsR0FBR0MsT0FDdkJWLGdCQUFnQlEsR0FBR0UsTUFBTUQsQ0FBQyxDQUFDQyxLQUFLO0lBQ3BDLElBQUlqQixxQkFDRixLQUFLLElBQUlpQixRQUFRakIsb0JBQW9CZ0IsR0FBSTtRQUN2QyxJQUFJWCxhQUFhYSxJQUFJLENBQUNGLEdBQUdDLE9BQ3ZCVixnQkFBZ0JRLEdBQUdFLE1BQU1ELENBQUMsQ0FBQ0MsS0FBSztJQUNwQztJQUNGLE9BQU9GO0FBQ1Q7QUFDQSxJQUFJSSxnQkFBZ0IsQ0FBQ0osR0FBR0MsSUFBTXBCLFdBQVdtQixHQUFHakIsa0JBQWtCa0I7QUFDOUQsSUFBSUksVUFBVSxDQUFDQyxRQUFRQyxhQUFhQztJQUNsQyxPQUFPLElBQUlDLFFBQVEsQ0FBQ0MsU0FBU0M7UUFDM0IsSUFBSUMs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cEIsQ0FDRix1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb3ZpZS1odWIvLi9ub2RlX21vZHVsZXMvcmVhY3QteW91dHViZS9kaXN0L1lvdVR1YmUuZXNtLmpzPzJhZTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZlByb3BzID0gT2JqZWN0LmRlZmluZVByb3BlcnRpZXM7XG52YXIgX19nZXRPd25Qcm9wRGVzY3MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycztcbnZhciBfX2dldE93blByb3BTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBfX2hhc093blByb3AgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIF9fcHJvcElzRW51bSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19zcHJlYWRWYWx1ZXMgPSAoYSwgYikgPT4ge1xuICBmb3IgKHZhciBwcm9wIGluIGIgfHwgKGIgPSB7fSkpXG4gICAgaWYgKF9faGFzT3duUHJvcC5jYWxsKGIsIHByb3ApKVxuICAgICAgX19kZWZOb3JtYWxQcm9wKGEsIHByb3AsIGJbcHJvcF0pO1xuICBpZiAoX19nZXRPd25Qcm9wU3ltYm9scylcbiAgICBmb3IgKHZhciBwcm9wIG9mIF9fZ2V0T3duUHJvcFN5bWJvbHMoYikpIHtcbiAgICAgIGlmIChfX3Byb3BJc0VudW0uY2FsbChiLCBwcm9wKSlcbiAgICAgICAgX19kZWZOb3JtYWxQcm9wKGEsIHByb3AsIGJbcHJvcF0pO1xuICAgIH1cbiAgcmV0dXJuIGE7XG59O1xudmFyIF9fc3ByZWFkUHJvcHMgPSAoYSwgYikgPT4gX19kZWZQcm9wcyhhLCBfX2dldE93blByb3BEZXNjcyhiKSk7XG52YXIgX19hc3luYyA9IChfX3RoaXMsIF9fYXJndW1lbnRzLCBnZW5lcmF0b3IpID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB2YXIgZnVsZmlsbGVkID0gKHZhbHVlKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJlamVjdChlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciByZWplY3RlZCA9ICh2YWx1ZSkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc3RlcChnZW5lcmF0b3IudGhyb3codmFsdWUpKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgfVxuICAgIH07XG4gICAgdmFyIHN0ZXAgPSAoeCkgPT4geC5kb25lID8gcmVzb2x2ZSh4LnZhbHVlKSA6IFByb21pc2UucmVzb2x2ZSh4LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpO1xuICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseShfX3RoaXMsIF9fYXJndW1lbnRzKSkubmV4dCgpKTtcbiAgfSk7XG59O1xuXG4vLyBzcmMvWW91VHViZS50c3hcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBpc0VxdWFsIGZyb20gXCJmYXN0LWRlZXAtZXF1YWxcIjtcbmltcG9ydCB5b3VUdWJlUGxheWVyIGZyb20gXCJ5b3V0dWJlLXBsYXllclwiO1xuZnVuY3Rpb24gc2hvdWxkVXBkYXRlVmlkZW8ocHJldlByb3BzLCBwcm9wcykge1xuICB2YXIgX2EsIF9iO1xuICBpZiAocHJldlByb3BzLnZpZGVvSWQgIT09IHByb3BzLnZpZGVvSWQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBjb25zdCBwcmV2VmFycyA9ICgoX2EgPSBwcmV2UHJvcHMub3B0cykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnBsYXllclZhcnMpIHx8IHt9O1xuICBjb25zdCB2YXJzID0gKChfYiA9IHByb3BzLm9wdHMpID09IG51bGwgPyB2b2lkIDAgOiBfYi5wbGF5ZXJWYXJzKSB8fCB7fTtcbiAgcmV0dXJuIHByZXZWYXJzLnN0YXJ0ICE9PSB2YXJzLnN0YXJ0IHx8IHByZXZWYXJzLmVuZCAhPT0gdmFycy5lbmQ7XG59XG5mdW5jdGlvbiBmaWx0ZXJSZXNldE9wdGlvbnMob3B0cyA9IHt9KSB7XG4gIHJldHVybiBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBvcHRzKSwge1xuICAgIGhlaWdodDogMCxcbiAgICB3aWR0aDogMCxcbiAgICBwbGF5ZXJWYXJzOiBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBvcHRzLnBsYXllclZhcnMpLCB7XG4gICAgICBhdXRvcGxheTogMCxcbiAgICAgIHN0YXJ0OiAwLFxuICAgICAgZW5kOiAwXG4gICAgfSlcbiAgfSk7XG59XG5mdW5jdGlvbiBzaG91bGRSZXNldFBsYXllcihwcmV2UHJvcHMsIHByb3BzKSB7XG4gIHJldHVybiBwcmV2UHJvcHMudmlkZW9JZCAhPT0gcHJvcHMudmlkZW9JZCB8fCAhaXNFcXVhbChmaWx0ZXJSZXNldE9wdGlvbnMocHJldlByb3BzLm9wdHMpLCBmaWx0ZXJSZXNldE9wdGlvbnMocHJvcHMub3B0cykpO1xufVxuZnVuY3Rpb24gc2hvdWxkVXBkYXRlUGxheWVyKHByZXZQcm9wcywgcHJvcHMpIHtcbiAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICByZXR1cm4gcHJldlByb3BzLmlkICE9PSBwcm9wcy5pZCB8fCBwcmV2UHJvcHMuY2xhc3NOYW1lICE9PSBwcm9wcy5jbGFzc05hbWUgfHwgKChfYSA9IHByZXZQcm9wcy5vcHRzKSA9PSBudWxsID8gdm9pZCAwIDogX2Eud2lkdGgpICE9PSAoKF9iID0gcHJvcHMub3B0cykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLndpZHRoKSB8fCAoKF9jID0gcHJldlByb3BzLm9wdHMpID09IG51bGwgPyB2b2lkIDAgOiBfYy5oZWlnaHQpICE9PSAoKF9kID0gcHJvcHMub3B0cykgPT0gbnVsbCA/IHZvaWQgMCA6IF9kLmhlaWdodCkgfHwgcHJldlByb3BzLmlmcmFtZUNsYXNzTmFtZSAhPT0gcHJvcHMuaWZyYW1lQ2xhc3NOYW1lIHx8IHByZXZQcm9wcy50aXRsZSAhPT0gcHJvcHMudGl0bGU7XG59XG52YXIgZGVmYXVsdFByb3BzID0ge1xuICB2aWRlb0lkOiBcIlwiLFxuICBpZDogXCJcIixcbiAgY2xhc3NOYW1lOiBcIlwiLFxuICBpZnJhbWVDbGFzc05hbWU6IFwiXCIsXG4gIHN0eWxlOiB7fSxcbiAgdGl0bGU6IFwiXCIsXG4gIGxvYWRpbmc6IHZvaWQgMCxcbiAgb3B0czoge30sXG4gIG9uUmVhZHk6ICgpID0+IHtcbiAgfSxcbiAgb25FcnJvcjogKCkgPT4ge1xuICB9LFxuICBvblBsYXk6ICgpID0+IHtcbiAgfSxcbiAgb25QYXVzZTogKCkgPT4ge1xuICB9LFxuICBvbkVuZDogKCkgPT4ge1xuICB9LFxuICBvblN0YXRlQ2hhbmdlOiAoKSA9PiB7XG4gIH0sXG4gIG9uUGxheWJhY2tSYXRlQ2hhbmdlOiAoKSA9PiB7XG4gIH0sXG4gIG9uUGxheWJhY2tRdWFsaXR5Q2hhbmdlOiAoKSA9PiB7XG4gIH1cbn07XG52YXIgcHJvcFR5cGVzID0ge1xuICB2aWRlb0lkOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpZDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpZnJhbWVDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgbG9hZGluZzogUHJvcFR5cGVzLm9uZU9mKFtcImxhenlcIiwgXCJlYWdlclwiXSksXG4gIG9wdHM6IFByb3BUeXBlcy5vYmplY3RPZihQcm9wVHlwZXMuYW55KSxcbiAgb25SZWFkeTogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uRXJyb3I6IFByb3BUeXBlcy5mdW5jLFxuICBvblBsYXk6IFByb3BUeXBlcy5mdW5jLFxuICBvblBhdXNlOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25FbmQ6IFByb3BUeXBlcy5mdW5jLFxuICBvblN0YXRlQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25QbGF5YmFja1JhdGVDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICBvblBsYXliYWNrUXVhbGl0eUNoYW5nZTogUHJvcFR5cGVzLmZ1bmNcbn07XG52YXIgX1lvdVR1YmUgPSBjbGFzcyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuZGVzdHJveVBsYXllclByb21pc2UgPSB2b2lkIDA7XG4gICAgdGhpcy5vblBsYXllclJlYWR5ID0gKGV2ZW50KSA9PiB7XG4gICAgICB2YXIgX2EsIF9iO1xuICAgICAgcmV0dXJuIChfYiA9IChfYSA9IHRoaXMucHJvcHMpLm9uUmVhZHkpID09IG51bGwgPyB2b2lkIDAgOiBfYi5jYWxsKF9hLCBldmVudCk7XG4gICAgfTtcbiAgICB0aGlzLm9uUGxheWVyRXJyb3IgPSAoZXZlbnQpID0+IHtcbiAgICAgIHZhciBfYSwgX2I7XG4gICAgICByZXR1cm4gKF9iID0gKF9hID0gdGhpcy5wcm9wcykub25FcnJvcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIGV2ZW50KTtcbiAgICB9O1xuICAgIHRoaXMub25QbGF5ZXJTdGF0ZUNoYW5nZSA9IChldmVudCkgPT4ge1xuICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nLCBfaDtcbiAgICAgIChfYiA9IChfYSA9IHRoaXMucHJvcHMpLm9uU3RhdGVDaGFuZ2UpID09IG51bGwgPyB2b2lkIDAgOiBfYi5jYWxsKF9hLCBldmVudCk7XG4gICAgICBzd2l0Y2ggKGV2ZW50LmRhdGEpIHtcbiAgICAgICAgY2FzZSBfWW91VHViZS5QbGF5ZXJTdGF0ZS5FTkRFRDpcbiAgICAgICAgICAoX2QgPSAoX2MgPSB0aGlzLnByb3BzKS5vbkVuZCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9kLmNhbGwoX2MsIGV2ZW50KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBfWW91VHViZS5QbGF5ZXJTdGF0ZS5QTEFZSU5HOlxuICAgICAgICAgIChfZiA9IChfZSA9IHRoaXMucHJvcHMpLm9uUGxheSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9mLmNhbGwoX2UsIGV2ZW50KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBfWW91VHViZS5QbGF5ZXJTdGF0ZS5QQVVTRUQ6XG4gICAgICAgICAgKF9oID0gKF9nID0gdGhpcy5wcm9wcykub25QYXVzZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9oLmNhbGwoX2csIGV2ZW50KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMub25QbGF5ZXJQbGF5YmFja1JhdGVDaGFuZ2UgPSAoZXZlbnQpID0+IHtcbiAgICAgIHZhciBfYSwgX2I7XG4gICAgICByZXR1cm4gKF9iID0gKF9hID0gdGhpcy5wcm9wcykub25QbGF5YmFja1JhdGVDaGFuZ2UpID09IG51bGwgPyB2b2lkIDAgOiBfYi5jYWxsKF9hLCBldmVudCk7XG4gICAgfTtcbiAgICB0aGlzLm9uUGxheWVyUGxheWJhY2tRdWFsaXR5Q2hhbmdlID0gKGV2ZW50KSA9PiB7XG4gICAgICB2YXIgX2EsIF9iO1xuICAgICAgcmV0dXJuIChfYiA9IChfYSA9IHRoaXMucHJvcHMpLm9uUGxheWJhY2tRdWFsaXR5Q2hhbmdlKSA9PSBudWxsID8gdm9pZCAwIDogX2IuY2FsbChfYSwgZXZlbnQpO1xuICAgIH07XG4gICAgdGhpcy5kZXN0cm95UGxheWVyID0gKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuaW50ZXJuYWxQbGF5ZXIpIHtcbiAgICAgICAgdGhpcy5kZXN0cm95UGxheWVyUHJvbWlzZSA9IHRoaXMuaW50ZXJuYWxQbGF5ZXIuZGVzdHJveSgpLnRoZW4oKCkgPT4gdGhpcy5kZXN0cm95UGxheWVyUHJvbWlzZSA9IHZvaWQgMCk7XG4gICAgICAgIHJldHVybiB0aGlzLmRlc3Ryb3lQbGF5ZXJQcm9taXNlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH07XG4gICAgdGhpcy5jcmVhdGVQbGF5ZXIgPSAoKSA9PiB7XG4gICAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICByZXR1cm47XG4gICAgICBpZiAodGhpcy5kZXN0cm95UGxheWVyUHJvbWlzZSkge1xuICAgICAgICB0aGlzLmRlc3Ryb3lQbGF5ZXJQcm9taXNlLnRoZW4odGhpcy5jcmVhdGVQbGF5ZXIpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBwbGF5ZXJPcHRzID0gX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgdGhpcy5wcm9wcy5vcHRzKSwge1xuICAgICAgICB2aWRlb0lkOiB0aGlzLnByb3BzLnZpZGVvSWRcbiAgICAgIH0pO1xuICAgICAgdGhpcy5pbnRlcm5hbFBsYXllciA9IHlvdVR1YmVQbGF5ZXIodGhpcy5jb250YWluZXIsIHBsYXllck9wdHMpO1xuICAgICAgdGhpcy5pbnRlcm5hbFBsYXllci5vbihcInJlYWR5XCIsIHRoaXMub25QbGF5ZXJSZWFkeSk7XG4gICAgICB0aGlzLmludGVybmFsUGxheWVyLm9uKFwiZXJyb3JcIiwgdGhpcy5vblBsYXllckVycm9yKTtcbiAgICAgIHRoaXMuaW50ZXJuYWxQbGF5ZXIub24oXCJzdGF0ZUNoYW5nZVwiLCB0aGlzLm9uUGxheWVyU3RhdGVDaGFuZ2UpO1xuICAgICAgdGhpcy5pbnRlcm5hbFBsYXllci5vbihcInBsYXliYWNrUmF0ZUNoYW5nZVwiLCB0aGlzLm9uUGxheWVyUGxheWJhY2tSYXRlQ2hhbmdlKTtcbiAgICAgIHRoaXMuaW50ZXJuYWxQbGF5ZXIub24oXCJwbGF5YmFja1F1YWxpdHlDaGFuZ2VcIiwgdGhpcy5vblBsYXllclBsYXliYWNrUXVhbGl0eUNoYW5nZSk7XG4gICAgICBpZiAodGhpcy5wcm9wcy50aXRsZSB8fCB0aGlzLnByb3BzLmxvYWRpbmcpIHtcbiAgICAgICAgdGhpcy5pbnRlcm5hbFBsYXllci5nZXRJZnJhbWUoKS50aGVuKChpZnJhbWUpID0+IHtcbiAgICAgICAgICBpZiAodGhpcy5wcm9wcy50aXRsZSlcbiAgICAgICAgICAgIGlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJ0aXRsZVwiLCB0aGlzLnByb3BzLnRpdGxlKTtcbiAgICAgICAgICBpZiAodGhpcy5wcm9wcy5sb2FkaW5nKVxuICAgICAgICAgICAgaWZyYW1lLnNldEF0dHJpYnV0ZShcImxvYWRpbmdcIiwgdGhpcy5wcm9wcy5sb2FkaW5nKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcbiAgICB0aGlzLnJlc2V0UGxheWVyID0gKCkgPT4gdGhpcy5kZXN0cm95UGxheWVyKCkudGhlbih0aGlzLmNyZWF0ZVBsYXllcik7XG4gICAgdGhpcy51cGRhdGVQbGF5ZXIgPSAoKSA9PiB7XG4gICAgICB2YXIgX2E7XG4gICAgICAoX2EgPSB0aGlzLmludGVybmFsUGxheWVyKSA9PSBudWxsID8gdm9pZCAwIDogX2EuZ2V0SWZyYW1lKCkudGhlbigoaWZyYW1lKSA9PiB7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLmlkKVxuICAgICAgICAgIGlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCB0aGlzLnByb3BzLmlkKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgIGlmcmFtZS5yZW1vdmVBdHRyaWJ1dGUoXCJpZFwiKTtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuaWZyYW1lQ2xhc3NOYW1lKVxuICAgICAgICAgIGlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCB0aGlzLnByb3BzLmlmcmFtZUNsYXNzTmFtZSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBpZnJhbWUucmVtb3ZlQXR0cmlidXRlKFwiY2xhc3NcIik7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLm9wdHMgJiYgdGhpcy5wcm9wcy5vcHRzLndpZHRoKVxuICAgICAgICAgIGlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiLCB0aGlzLnByb3BzLm9wdHMud2lkdGgudG9TdHJpbmcoKSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBpZnJhbWUucmVtb3ZlQXR0cmlidXRlKFwid2lkdGhcIik7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLm9wdHMgJiYgdGhpcy5wcm9wcy5vcHRzLmhlaWdodClcbiAgICAgICAgICBpZnJhbWUuc2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIsIHRoaXMucHJvcHMub3B0cy5oZWlnaHQudG9TdHJpbmcoKSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBpZnJhbWUucmVtb3ZlQXR0cmlidXRlKFwiaGVpZ2h0XCIpO1xuICAgICAgICBpZiAodGhpcy5wcm9wcy50aXRsZSlcbiAgICAgICAgICBpZnJhbWUuc2V0QXR0cmlidXRlKFwidGl0bGVcIiwgdGhpcy5wcm9wcy50aXRsZSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBpZnJhbWUuc2V0QXR0cmlidXRlKFwidGl0bGVcIiwgXCJZb3VUdWJlIHZpZGVvIHBsYXllclwiKTtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMubG9hZGluZylcbiAgICAgICAgICBpZnJhbWUuc2V0QXR0cmlidXRlKFwibG9hZGluZ1wiLCB0aGlzLnByb3BzLmxvYWRpbmcpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgaWZyYW1lLnJlbW92ZUF0dHJpYnV0ZShcImxvYWRpbmdcIik7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIHRoaXMuZ2V0SW50ZXJuYWxQbGF5ZXIgPSAoKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5pbnRlcm5hbFBsYXllcjtcbiAgICB9O1xuICAgIHRoaXMudXBkYXRlVmlkZW8gPSAoKSA9PiB7XG4gICAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgICBpZiAodHlwZW9mIHRoaXMucHJvcHMudmlkZW9JZCA9PT0gXCJ1bmRlZmluZWRcIiB8fCB0aGlzLnByb3BzLnZpZGVvSWQgPT09IG51bGwpIHtcbiAgICAgICAgKF9hID0gdGhpcy5pbnRlcm5hbFBsYXllcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnN0b3BWaWRlbygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBsZXQgYXV0b3BsYXkgPSBmYWxzZTtcbiAgICAgIGNvbnN0IG9wdHMgPSB7XG4gICAgICAgIHZpZGVvSWQ6IHRoaXMucHJvcHMudmlkZW9JZFxuICAgICAgfTtcbiAgICAgIGlmICgoX2IgPSB0aGlzLnByb3BzLm9wdHMpID09IG51bGwgPyB2b2lkIDAgOiBfYi5wbGF5ZXJWYXJzKSB7XG4gICAgICAgIGF1dG9wbGF5ID0gdGhpcy5wcm9wcy5vcHRzLnBsYXllclZhcnMuYXV0b3BsYXkgPT09IDE7XG4gICAgICAgIGlmIChcInN0YXJ0XCIgaW4gdGhpcy5wcm9wcy5vcHRzLnBsYXllclZhcnMpIHtcbiAgICAgICAgICBvcHRzLnN0YXJ0U2Vjb25kcyA9IHRoaXMucHJvcHMub3B0cy5wbGF5ZXJWYXJzLnN0YXJ0O1xuICAgICAgICB9XG4gICAgICAgIGlmIChcImVuZFwiIGluIHRoaXMucHJvcHMub3B0cy5wbGF5ZXJWYXJzKSB7XG4gICAgICAgICAgb3B0cy5lbmRTZWNvbmRzID0gdGhpcy5wcm9wcy5vcHRzLnBsYXllclZhcnMuZW5kO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoYXV0b3BsYXkpIHtcbiAgICAgICAgKF9jID0gdGhpcy5pbnRlcm5hbFBsYXllcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLmxvYWRWaWRlb0J5SWQob3B0cyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIChfZCA9IHRoaXMuaW50ZXJuYWxQbGF5ZXIpID09IG51bGwgPyB2b2lkIDAgOiBfZC5jdWVWaWRlb0J5SWQob3B0cyk7XG4gICAgfTtcbiAgICB0aGlzLnJlZkNvbnRhaW5lciA9IChjb250YWluZXIpID0+IHtcbiAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgIH07XG4gICAgdGhpcy5jb250YWluZXIgPSBudWxsO1xuICAgIHRoaXMuaW50ZXJuYWxQbGF5ZXIgPSBudWxsO1xuICB9XG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuY3JlYXRlUGxheWVyKCk7XG4gIH1cbiAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBpZiAoc2hvdWxkVXBkYXRlUGxheWVyKHByZXZQcm9wcywgdGhpcy5wcm9wcykpIHtcbiAgICAgICAgdGhpcy51cGRhdGVQbGF5ZXIoKTtcbiAgICAgIH1cbiAgICAgIGlmIChzaG91bGRSZXNldFBsYXllcihwcmV2UHJvcHMsIHRoaXMucHJvcHMpKSB7XG4gICAgICAgIHlpZWxkIHRoaXMucmVzZXRQbGF5ZXIoKTtcbiAgICAgIH1cbiAgICAgIGlmIChzaG91bGRVcGRhdGVWaWRlbyhwcmV2UHJvcHMsIHRoaXMucHJvcHMpKSB7XG4gICAgICAgIHRoaXMudXBkYXRlVmlkZW8oKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLmRlc3Ryb3lQbGF5ZXIoKTtcbiAgfVxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogdGhpcy5wcm9wcy5jbGFzc05hbWUsXG4gICAgICBzdHlsZTogdGhpcy5wcm9wcy5zdHlsZVxuICAgIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGlkOiB0aGlzLnByb3BzLmlkLFxuICAgICAgY2xhc3NOYW1lOiB0aGlzLnByb3BzLmlmcmFtZUNsYXNzTmFtZSxcbiAgICAgIHJlZjogdGhpcy5yZWZDb250YWluZXJcbiAgICB9KSk7XG4gIH1cbn07XG52YXIgWW91VHViZSA9IF9Zb3VUdWJlO1xuWW91VHViZS5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG5Zb3VUdWJlLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcbllvdVR1YmUuUGxheWVyU3RhdGUgPSB7XG4gIFVOU1RBUlRFRDogLTEsXG4gIEVOREVEOiAwLFxuICBQTEFZSU5HOiAxLFxuICBQQVVTRUQ6IDIsXG4gIEJVRkZFUklORzogMyxcbiAgQ1VFRDogNVxufTtcbnZhciBZb3VUdWJlX2RlZmF1bHQgPSBZb3VUdWJlO1xuZXhwb3J0IHtcbiAgWW91VHViZV9kZWZhdWx0IGFzIGRlZmF1bHRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Zb3VUdWJlLmVzbS5qcy5tYXAiXSwibmFtZXMiOlsiX19kZWZQcm9wIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJfX2RlZlByb3BzIiwiZGVmaW5lUHJvcGVydGllcyIsIl9fZ2V0T3duUHJvcERlc2NzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsIl9fZ2V0T3duUHJvcFN5bWJvbHMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJfX2hhc093blByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsIl9fcHJvcElzRW51bSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiX19kZWZOb3JtYWxQcm9wIiwib2JqIiwia2V5IiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJfX3NwcmVhZFZhbHVlcyIsImEiLCJiIiwicHJvcCIsImNhbGwiLCJfX3NwcmVhZFByb3BzIiwiX19hc3luYyIsIl9fdGhpcyIsIl9fYXJndW1lbnRzIiwiZ2VuZXJhdG9yIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJmdWxmaWxsZWQiLCJzdGVwIiwibmV4dCIsImUiLCJyZWplY3RlZCIsInRocm93IiwieCIsImRvbmUiLCJ0aGVuIiwiYXBwbHkiLCJQcm9wVHlwZXMiLCJSZWFjdCIsImlzRXF1YWwiLCJ5b3VUdWJlUGxheWVyIiwic2hvdWxkVXBkYXRlVmlkZW8iLCJwcmV2UHJvcHMiLCJwcm9wcyIsIl9hIiwiX2IiLCJ2aWRlb0lkIiwicHJldlZhcnMiLCJvcHRzIiwicGxheWVyVmFycyIsInZhcnMiLCJzdGFydCIsImVuZCIsImZpbHRlclJlc2V0T3B0aW9ucyIsImhlaWdodCIsIndpZHRoIiwiYXV0b3BsYXkiLCJzaG91bGRSZXNldFBsYXllciIsInNob3VsZFVwZGF0ZVBsYXllciIsIl9jIiwiX2QiLCJpZCIsImNsYXNzTmFtZSIsImlmcmFtZUNsYXNzTmFtZSIsInRpdGxlIiwiZGVmYXVsdFByb3BzIiwic3R5bGUiLCJsb2FkaW5nIiwib25SZWFkeSIsIm9uRXJyb3IiLCJvblBsYXkiLCJvblBhdXNlIiwib25FbmQiLCJvblN0YXRlQ2hhbmdlIiwib25QbGF5YmFja1JhdGVDaGFuZ2UiLCJvblBsYXliYWNrUXVhbGl0eUNoYW5nZSIsInByb3BUeXBlcyIsInN0cmluZyIsIm9iamVjdCIsIm9uZU9mIiwib2JqZWN0T2YiLCJhbnkiLCJmdW5jIiwiX1lvdVR1YmUiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsImRlc3Ryb3lQbGF5ZXJQcm9taXNlIiwib25QbGF5ZXJSZWFkeSIsImV2ZW50Iiwib25QbGF5ZXJFcnJvciIsIm9uUGxheWVyU3RhdGVDaGFuZ2UiLCJfZSIsIl9mIiwiX2ciLCJfaCIsImRhdGEiLCJQbGF5ZXJTdGF0ZSIsIkVOREVEIiwiUExBWUlORyIsIlBBVVNFRCIsIm9uUGxheWVyUGxheWJhY2tSYXRlQ2hhbmdlIiwib25QbGF5ZXJQbGF5YmFja1F1YWxpdHlDaGFuZ2UiLCJkZXN0cm95UGxheWVyIiwiaW50ZXJuYWxQbGF5ZXIiLCJkZXN0cm95IiwiY3JlYXRlUGxheWVyIiwiZG9jdW1lbnQiLCJwbGF5ZXJPcHRzIiwiY29udGFpbmVyIiwib24iLCJnZXRJZnJhbWUiLCJpZnJhbWUiLCJzZXRBdHRyaWJ1dGUiLCJyZXNldFBsYXllciIsInVwZGF0ZVBsYXllciIsInJlbW92ZUF0dHJpYnV0ZSIsInRvU3RyaW5nIiwiZ2V0SW50ZXJuYWxQbGF5ZXIiLCJ1cGRhdGVWaWRlbyIsInN0b3BWaWRlbyIsInN0YXJ0U2Vjb25kcyIsImVuZFNlY29uZHMiLCJsb2FkVmlkZW9CeUlkIiwiY3VlVmlkZW9CeUlkIiwicmVmQ29udGFpbmVyIiwiY29tcG9uZW50RGlkTW91bnQiLCJjb21wb25lbnREaWRVcGRhdGUiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJyZWYiLCJZb3VUdWJlIiwiVU5TVEFSVEVEIiwiQlVGRkVSSU5HIiwiQ1VFRCIsIllvdVR1YmVfZGVmYXVsdCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-youtube/dist/YouTube.esm.js\n");

/***/ })

};
;