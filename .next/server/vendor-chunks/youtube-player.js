"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/youtube-player";
exports.ids = ["vendor-chunks/youtube-player"];
exports.modules = {

/***/ "(ssr)/./node_modules/youtube-player/dist/FunctionStateMap.js":
/*!**************************************************************!*\
  !*** ./node_modules/youtube-player/dist/FunctionStateMap.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _PlayerStates = __webpack_require__(/*! ./constants/PlayerStates */ \"(ssr)/./node_modules/youtube-player/dist/constants/PlayerStates.js\");\nvar _PlayerStates2 = _interopRequireDefault(_PlayerStates);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nexports[\"default\"] = {\n    pauseVideo: {\n        acceptableStates: [\n            _PlayerStates2.default.ENDED,\n            _PlayerStates2.default.PAUSED\n        ],\n        stateChangeRequired: false\n    },\n    playVideo: {\n        acceptableStates: [\n            _PlayerStates2.default.ENDED,\n            _PlayerStates2.default.PLAYING\n        ],\n        stateChangeRequired: false\n    },\n    seekTo: {\n        acceptableStates: [\n            _PlayerStates2.default.ENDED,\n            _PlayerStates2.default.PLAYING,\n            _PlayerStates2.default.PAUSED\n        ],\n        stateChangeRequired: true,\n        // TRICKY: `seekTo` may not cause a state change if no buffering is\n        // required.\n        timeout: 3000\n    }\n};\nmodule.exports = exports[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9GdW5jdGlvblN0YXRlTWFwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUVGLElBQUlDLGdCQUFnQkMsbUJBQU9BLENBQUM7QUFFNUIsSUFBSUMsaUJBQWlCQyx1QkFBdUJIO0FBRTVDLFNBQVNHLHVCQUF1QkMsR0FBRztJQUFJLE9BQU9BLE9BQU9BLElBQUlDLFVBQVUsR0FBR0QsTUFBTTtRQUFFRSxTQUFTRjtJQUFJO0FBQUc7QUFFOUZOLGtCQUFlLEdBQUc7SUFDaEJTLFlBQVk7UUFDVkMsa0JBQWtCO1lBQUNOLGVBQWVJLE9BQU8sQ0FBQ0csS0FBSztZQUFFUCxlQUFlSSxPQUFPLENBQUNJLE1BQU07U0FBQztRQUMvRUMscUJBQXFCO0lBQ3ZCO0lBQ0FDLFdBQVc7UUFDVEosa0JBQWtCO1lBQUNOLGVBQWVJLE9BQU8sQ0FBQ0csS0FBSztZQUFFUCxlQUFlSSxPQUFPLENBQUNPLE9BQU87U0FBQztRQUNoRkYscUJBQXFCO0lBQ3ZCO0lBQ0FHLFFBQVE7UUFDTk4sa0JBQWtCO1lBQUNOLGVBQWVJLE9BQU8sQ0FBQ0csS0FBSztZQUFFUCxlQUFlSSxPQUFPLENBQUNPLE9BQU87WUFBRVgsZUFBZUksT0FBTyxDQUFDSSxNQUFNO1NBQUM7UUFDL0dDLHFCQUFxQjtRQUVyQixtRUFBbUU7UUFDbkUsWUFBWTtRQUNaSSxTQUFTO0lBQ1g7QUFDRjtBQUNBQyxPQUFPbEIsT0FBTyxHQUFHQSxPQUFPLENBQUMsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL21vdmllLWh1Yi8uL25vZGVfbW9kdWxlcy95b3V0dWJlLXBsYXllci9kaXN0L0Z1bmN0aW9uU3RhdGVNYXAuanM/ZjQwZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfUGxheWVyU3RhdGVzID0gcmVxdWlyZSgnLi9jb25zdGFudHMvUGxheWVyU3RhdGVzJyk7XG5cbnZhciBfUGxheWVyU3RhdGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1BsYXllclN0YXRlcyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgcGF1c2VWaWRlbzoge1xuICAgIGFjY2VwdGFibGVTdGF0ZXM6IFtfUGxheWVyU3RhdGVzMi5kZWZhdWx0LkVOREVELCBfUGxheWVyU3RhdGVzMi5kZWZhdWx0LlBBVVNFRF0sXG4gICAgc3RhdGVDaGFuZ2VSZXF1aXJlZDogZmFsc2VcbiAgfSxcbiAgcGxheVZpZGVvOiB7XG4gICAgYWNjZXB0YWJsZVN0YXRlczogW19QbGF5ZXJTdGF0ZXMyLmRlZmF1bHQuRU5ERUQsIF9QbGF5ZXJTdGF0ZXMyLmRlZmF1bHQuUExBWUlOR10sXG4gICAgc3RhdGVDaGFuZ2VSZXF1aXJlZDogZmFsc2VcbiAgfSxcbiAgc2Vla1RvOiB7XG4gICAgYWNjZXB0YWJsZVN0YXRlczogW19QbGF5ZXJTdGF0ZXMyLmRlZmF1bHQuRU5ERUQsIF9QbGF5ZXJTdGF0ZXMyLmRlZmF1bHQuUExBWUlORywgX1BsYXllclN0YXRlczIuZGVmYXVsdC5QQVVTRURdLFxuICAgIHN0YXRlQ2hhbmdlUmVxdWlyZWQ6IHRydWUsXG5cbiAgICAvLyBUUklDS1k6IGBzZWVrVG9gIG1heSBub3QgY2F1c2UgYSBzdGF0ZSBjaGFuZ2UgaWYgbm8gYnVmZmVyaW5nIGlzXG4gICAgLy8gcmVxdWlyZWQuXG4gICAgdGltZW91dDogMzAwMFxuICB9XG59O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX1BsYXllclN0YXRlcyIsInJlcXVpcmUiLCJfUGxheWVyU3RhdGVzMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInBhdXNlVmlkZW8iLCJhY2NlcHRhYmxlU3RhdGVzIiwiRU5ERUQiLCJQQVVTRUQiLCJzdGF0ZUNoYW5nZVJlcXVpcmVkIiwicGxheVZpZGVvIiwiUExBWUlORyIsInNlZWtUbyIsInRpbWVvdXQiLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/dist/FunctionStateMap.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/dist/YouTubePlayer.js":
/*!***********************************************************!*\
  !*** ./node_modules/youtube-player/dist/YouTubePlayer.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _debug = __webpack_require__(/*! debug */ \"(ssr)/./node_modules/youtube-player/node_modules/debug/src/index.js\");\nvar _debug2 = _interopRequireDefault(_debug);\nvar _functionNames = __webpack_require__(/*! ./functionNames */ \"(ssr)/./node_modules/youtube-player/dist/functionNames.js\");\nvar _functionNames2 = _interopRequireDefault(_functionNames);\nvar _eventNames = __webpack_require__(/*! ./eventNames */ \"(ssr)/./node_modules/youtube-player/dist/eventNames.js\");\nvar _eventNames2 = _interopRequireDefault(_eventNames);\nvar _FunctionStateMap = __webpack_require__(/*! ./FunctionStateMap */ \"(ssr)/./node_modules/youtube-player/dist/FunctionStateMap.js\");\nvar _FunctionStateMap2 = _interopRequireDefault(_FunctionStateMap);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/* eslint-disable promise/prefer-await-to-then */ var debug = (0, _debug2.default)(\"youtube-player\");\nvar YouTubePlayer = {};\n/**\n * Construct an object that defines an event handler for all of the YouTube\n * player events. Proxy captured events through an event emitter.\n *\n * @todo Capture event parameters.\n * @see https://developers.google.com/youtube/iframe_api_reference#Events\n */ YouTubePlayer.proxyEvents = function(emitter) {\n    var events = {};\n    var _loop = function _loop(eventName) {\n        var onEventName = \"on\" + eventName.slice(0, 1).toUpperCase() + eventName.slice(1);\n        events[onEventName] = function(event) {\n            debug('event \"%s\"', onEventName, event);\n            emitter.trigger(eventName, event);\n        };\n    };\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n    try {\n        for(var _iterator = _eventNames2.default[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var eventName = _step.value;\n            _loop(eventName);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return events;\n};\n/**\n * Delays player API method execution until player state is ready.\n *\n * @todo Proxy all of the methods using Object.keys.\n * @todo See TRICKY below.\n * @param playerAPIReady Promise that resolves when player is ready.\n * @param strictState A flag designating whether or not to wait for\n * an acceptable state when calling supported functions.\n * @returns {Object}\n */ YouTubePlayer.promisifyPlayer = function(playerAPIReady) {\n    var strictState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var functions = {};\n    var _loop2 = function _loop2(functionName) {\n        if (strictState && _FunctionStateMap2.default[functionName]) {\n            functions[functionName] = function() {\n                for(var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++){\n                    args[_key] = arguments[_key];\n                }\n                return playerAPIReady.then(function(player) {\n                    var stateInfo = _FunctionStateMap2.default[functionName];\n                    var playerState = player.getPlayerState();\n                    // eslint-disable-next-line no-warning-comments\n                    // TODO: Just spread the args into the function once Babel is fixed:\n                    // https://github.com/babel/babel/issues/4270\n                    //\n                    // eslint-disable-next-line prefer-spread\n                    var value = player[functionName].apply(player, args);\n                    // TRICKY: For functions like `seekTo`, a change in state must be\n                    // triggered given that the resulting state could match the initial\n                    // state.\n                    if (stateInfo.stateChangeRequired || // eslint-disable-next-line no-extra-parens\n                    Array.isArray(stateInfo.acceptableStates) && stateInfo.acceptableStates.indexOf(playerState) === -1) {\n                        return new Promise(function(resolve) {\n                            var onPlayerStateChange = function onPlayerStateChange() {\n                                var playerStateAfterChange = player.getPlayerState();\n                                var timeout = void 0;\n                                if (typeof stateInfo.timeout === \"number\") {\n                                    timeout = setTimeout(function() {\n                                        player.removeEventListener(\"onStateChange\", onPlayerStateChange);\n                                        resolve();\n                                    }, stateInfo.timeout);\n                                }\n                                if (Array.isArray(stateInfo.acceptableStates) && stateInfo.acceptableStates.indexOf(playerStateAfterChange) !== -1) {\n                                    player.removeEventListener(\"onStateChange\", onPlayerStateChange);\n                                    clearTimeout(timeout);\n                                    resolve();\n                                }\n                            };\n                            player.addEventListener(\"onStateChange\", onPlayerStateChange);\n                        }).then(function() {\n                            return value;\n                        });\n                    }\n                    return value;\n                });\n            };\n        } else {\n            functions[functionName] = function() {\n                for(var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n                    args[_key2] = arguments[_key2];\n                }\n                return playerAPIReady.then(function(player) {\n                    // eslint-disable-next-line no-warning-comments\n                    // TODO: Just spread the args into the function once Babel is fixed:\n                    // https://github.com/babel/babel/issues/4270\n                    //\n                    // eslint-disable-next-line prefer-spread\n                    return player[functionName].apply(player, args);\n                });\n            };\n        }\n    };\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n    try {\n        for(var _iterator2 = _functionNames2.default[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true){\n            var functionName = _step2.value;\n            _loop2(functionName);\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally{\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n    return functions;\n};\nexports[\"default\"] = YouTubePlayer;\nmodule.exports = exports[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/dist/YouTubePlayer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/dist/constants/PlayerStates.js":
/*!********************************************************************!*\
  !*** ./node_modules/youtube-player/dist/constants/PlayerStates.js ***!
  \********************************************************************/
/***/ ((module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = {\n    BUFFERING: 3,\n    ENDED: 0,\n    PAUSED: 2,\n    PLAYING: 1,\n    UNSTARTED: -1,\n    VIDEO_CUED: 5\n};\nmodule.exports = exports[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9jb25zdGFudHMvUGxheWVyU3RhdGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCxrQkFBZSxHQUFHO0lBQ2hCRyxXQUFXO0lBQ1hDLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxTQUFTO0lBQ1RDLFdBQVcsQ0FBQztJQUNaQyxZQUFZO0FBQ2Q7QUFDQUMsT0FBT1QsT0FBTyxHQUFHQSxPQUFPLENBQUMsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL21vdmllLWh1Yi8uL25vZGVfbW9kdWxlcy95b3V0dWJlLXBsYXllci9kaXN0L2NvbnN0YW50cy9QbGF5ZXJTdGF0ZXMuanM/NDkyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgQlVGRkVSSU5HOiAzLFxuICBFTkRFRDogMCxcbiAgUEFVU0VEOiAyLFxuICBQTEFZSU5HOiAxLFxuICBVTlNUQVJURUQ6IC0xLFxuICBWSURFT19DVUVEOiA1XG59O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiQlVGRkVSSU5HIiwiRU5ERUQiLCJQQVVTRUQiLCJQTEFZSU5HIiwiVU5TVEFSVEVEIiwiVklERU9fQ1VFRCIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/dist/constants/PlayerStates.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/dist/eventNames.js":
/*!********************************************************!*\
  !*** ./node_modules/youtube-player/dist/eventNames.js ***!
  \********************************************************/
/***/ ((module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n/**\n * @see https://developers.google.com/youtube/iframe_api_reference#Events\n * `volumeChange` is not officially supported but seems to work\n * it emits an object: `{volume: 82.6923076923077, muted: false}`\n */ exports[\"default\"] = [\n    \"ready\",\n    \"stateChange\",\n    \"playbackQualityChange\",\n    \"playbackRateChange\",\n    \"error\",\n    \"apiChange\",\n    \"volumeChange\"\n];\nmodule.exports = exports[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9ldmVudE5hbWVzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUdGOzs7O0NBSUMsR0FDREQsa0JBQWUsR0FBRztJQUFDO0lBQVM7SUFBZTtJQUF5QjtJQUFzQjtJQUFTO0lBQWE7Q0FBZTtBQUMvSEcsT0FBT0gsT0FBTyxHQUFHQSxPQUFPLENBQUMsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL21vdmllLWh1Yi8uL25vZGVfbW9kdWxlcy95b3V0dWJlLXBsYXllci9kaXN0L2V2ZW50TmFtZXMuanM/NzNkNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cblxuLyoqXG4gKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3lvdXR1YmUvaWZyYW1lX2FwaV9yZWZlcmVuY2UjRXZlbnRzXG4gKiBgdm9sdW1lQ2hhbmdlYCBpcyBub3Qgb2ZmaWNpYWxseSBzdXBwb3J0ZWQgYnV0IHNlZW1zIHRvIHdvcmtcbiAqIGl0IGVtaXRzIGFuIG9iamVjdDogYHt2b2x1bWU6IDgyLjY5MjMwNzY5MjMwNzcsIG11dGVkOiBmYWxzZX1gXG4gKi9cbmV4cG9ydHMuZGVmYXVsdCA9IFsncmVhZHknLCAnc3RhdGVDaGFuZ2UnLCAncGxheWJhY2tRdWFsaXR5Q2hhbmdlJywgJ3BsYXliYWNrUmF0ZUNoYW5nZScsICdlcnJvcicsICdhcGlDaGFuZ2UnLCAndm9sdW1lQ2hhbmdlJ107XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/dist/eventNames.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/dist/functionNames.js":
/*!***********************************************************!*\
  !*** ./node_modules/youtube-player/dist/functionNames.js ***!
  \***********************************************************/
/***/ ((module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n/**\n * @see https://developers.google.com/youtube/iframe_api_reference#Functions\n */ exports[\"default\"] = [\n    \"cueVideoById\",\n    \"loadVideoById\",\n    \"cueVideoByUrl\",\n    \"loadVideoByUrl\",\n    \"playVideo\",\n    \"pauseVideo\",\n    \"stopVideo\",\n    \"getVideoLoadedFraction\",\n    \"cuePlaylist\",\n    \"loadPlaylist\",\n    \"nextVideo\",\n    \"previousVideo\",\n    \"playVideoAt\",\n    \"setShuffle\",\n    \"setLoop\",\n    \"getPlaylist\",\n    \"getPlaylistIndex\",\n    \"setOption\",\n    \"mute\",\n    \"unMute\",\n    \"isMuted\",\n    \"setVolume\",\n    \"getVolume\",\n    \"seekTo\",\n    \"getPlayerState\",\n    \"getPlaybackRate\",\n    \"setPlaybackRate\",\n    \"getAvailablePlaybackRates\",\n    \"getPlaybackQuality\",\n    \"setPlaybackQuality\",\n    \"getAvailableQualityLevels\",\n    \"getCurrentTime\",\n    \"getDuration\",\n    \"removeEventListener\",\n    \"getVideoUrl\",\n    \"getVideoEmbedCode\",\n    \"getOptions\",\n    \"getOption\",\n    \"addEventListener\",\n    \"destroy\",\n    \"setSize\",\n    \"getIframe\"\n];\nmodule.exports = exports[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9mdW5jdGlvbk5hbWVzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUdGOztDQUVDLEdBQ0RELGtCQUFlLEdBQUc7SUFBQztJQUFnQjtJQUFpQjtJQUFpQjtJQUFrQjtJQUFhO0lBQWM7SUFBYTtJQUEwQjtJQUFlO0lBQWdCO0lBQWE7SUFBaUI7SUFBZTtJQUFjO0lBQVc7SUFBZTtJQUFvQjtJQUFhO0lBQVE7SUFBVTtJQUFXO0lBQWE7SUFBYTtJQUFVO0lBQWtCO0lBQW1CO0lBQW1CO0lBQTZCO0lBQXNCO0lBQXNCO0lBQTZCO0lBQWtCO0lBQWU7SUFBdUI7SUFBZTtJQUFxQjtJQUFjO0lBQWE7SUFBb0I7SUFBVztJQUFXO0NBQVk7QUFDMXJCRyxPQUFPSCxPQUFPLEdBQUdBLE9BQU8sQ0FBQyxVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbW92aWUtaHViLy4vbm9kZV9tb2R1bGVzL3lvdXR1YmUtcGxheWVyL2Rpc3QvZnVuY3Rpb25OYW1lcy5qcz83NjI3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxuXG4vKipcbiAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20veW91dHViZS9pZnJhbWVfYXBpX3JlZmVyZW5jZSNGdW5jdGlvbnNcbiAqL1xuZXhwb3J0cy5kZWZhdWx0ID0gWydjdWVWaWRlb0J5SWQnLCAnbG9hZFZpZGVvQnlJZCcsICdjdWVWaWRlb0J5VXJsJywgJ2xvYWRWaWRlb0J5VXJsJywgJ3BsYXlWaWRlbycsICdwYXVzZVZpZGVvJywgJ3N0b3BWaWRlbycsICdnZXRWaWRlb0xvYWRlZEZyYWN0aW9uJywgJ2N1ZVBsYXlsaXN0JywgJ2xvYWRQbGF5bGlzdCcsICduZXh0VmlkZW8nLCAncHJldmlvdXNWaWRlbycsICdwbGF5VmlkZW9BdCcsICdzZXRTaHVmZmxlJywgJ3NldExvb3AnLCAnZ2V0UGxheWxpc3QnLCAnZ2V0UGxheWxpc3RJbmRleCcsICdzZXRPcHRpb24nLCAnbXV0ZScsICd1bk11dGUnLCAnaXNNdXRlZCcsICdzZXRWb2x1bWUnLCAnZ2V0Vm9sdW1lJywgJ3NlZWtUbycsICdnZXRQbGF5ZXJTdGF0ZScsICdnZXRQbGF5YmFja1JhdGUnLCAnc2V0UGxheWJhY2tSYXRlJywgJ2dldEF2YWlsYWJsZVBsYXliYWNrUmF0ZXMnLCAnZ2V0UGxheWJhY2tRdWFsaXR5JywgJ3NldFBsYXliYWNrUXVhbGl0eScsICdnZXRBdmFpbGFibGVRdWFsaXR5TGV2ZWxzJywgJ2dldEN1cnJlbnRUaW1lJywgJ2dldER1cmF0aW9uJywgJ3JlbW92ZUV2ZW50TGlzdGVuZXInLCAnZ2V0VmlkZW9VcmwnLCAnZ2V0VmlkZW9FbWJlZENvZGUnLCAnZ2V0T3B0aW9ucycsICdnZXRPcHRpb24nLCAnYWRkRXZlbnRMaXN0ZW5lcicsICdkZXN0cm95JywgJ3NldFNpemUnLCAnZ2V0SWZyYW1lJ107XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/dist/functionNames.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/dist/index.js":
/*!***************************************************!*\
  !*** ./node_modules/youtube-player/dist/index.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n    return typeof obj;\n} : function(obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nvar _sister = __webpack_require__(/*! sister */ \"(ssr)/./node_modules/sister/src/sister.js\");\nvar _sister2 = _interopRequireDefault(_sister);\nvar _loadYouTubeIframeApi = __webpack_require__(/*! ./loadYouTubeIframeApi */ \"(ssr)/./node_modules/youtube-player/dist/loadYouTubeIframeApi.js\");\nvar _loadYouTubeIframeApi2 = _interopRequireDefault(_loadYouTubeIframeApi);\nvar _YouTubePlayer = __webpack_require__(/*! ./YouTubePlayer */ \"(ssr)/./node_modules/youtube-player/dist/YouTubePlayer.js\");\nvar _YouTubePlayer2 = _interopRequireDefault(_YouTubePlayer);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/**\n * @typedef YT.Player\n * @see https://developers.google.com/youtube/iframe_api_reference\n * */ /**\n * @see https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\n */ var youtubeIframeAPI = void 0;\n/**\n * A factory function used to produce an instance of YT.Player and queue function calls and proxy events of the resulting object.\n *\n * @param maybeElementId Either An existing YT.Player instance,\n * the DOM element or the id of the HTML element where the API will insert an <iframe>.\n * @param options See `options` (Ignored when using an existing YT.Player instance).\n * @param strictState A flag designating whether or not to wait for\n * an acceptable state when calling supported functions. Default: `false`.\n * See `FunctionStateMap.js` for supported functions and acceptable states.\n */ exports[\"default\"] = function(maybeElementId) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var strictState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var emitter = (0, _sister2.default)();\n    if (!youtubeIframeAPI) {\n        youtubeIframeAPI = (0, _loadYouTubeIframeApi2.default)(emitter);\n    }\n    if (options.events) {\n        throw new Error(\"Event handlers cannot be overwritten.\");\n    }\n    if (typeof maybeElementId === \"string\" && !document.getElementById(maybeElementId)) {\n        throw new Error('Element \"' + maybeElementId + '\" does not exist.');\n    }\n    options.events = _YouTubePlayer2.default.proxyEvents(emitter);\n    var playerAPIReady = new Promise(function(resolve) {\n        if ((typeof maybeElementId === \"undefined\" ? \"undefined\" : _typeof(maybeElementId)) === \"object\" && maybeElementId.playVideo instanceof Function) {\n            var player = maybeElementId;\n            resolve(player);\n        } else {\n            // asume maybeElementId can be rendered inside\n            // eslint-disable-next-line promise/catch-or-return\n            youtubeIframeAPI.then(function(YT) {\n                // eslint-disable-line promise/prefer-await-to-then\n                var player = new YT.Player(maybeElementId, options);\n                emitter.on(\"ready\", function() {\n                    resolve(player);\n                });\n                return null;\n            });\n        }\n    });\n    var playerApi = _YouTubePlayer2.default.promisifyPlayer(playerAPIReady, strictState);\n    playerApi.on = emitter.on;\n    playerApi.off = emitter.off;\n    return playerApi;\n};\nmodule.exports = exports[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFFRixJQUFJQyxVQUFVLE9BQU9DLFdBQVcsY0FBYyxPQUFPQSxPQUFPQyxRQUFRLEtBQUssV0FBVyxTQUFVQyxHQUFHO0lBQUksT0FBTyxPQUFPQTtBQUFLLElBQUksU0FBVUEsR0FBRztJQUFJLE9BQU9BLE9BQU8sT0FBT0YsV0FBVyxjQUFjRSxJQUFJQyxXQUFXLEtBQUtILFVBQVVFLFFBQVFGLE9BQU9JLFNBQVMsR0FBRyxXQUFXLE9BQU9GO0FBQUs7QUFFM1EsSUFBSUcsVUFBVUMsbUJBQU9BLENBQUM7QUFFdEIsSUFBSUMsV0FBV0MsdUJBQXVCSDtBQUV0QyxJQUFJSSx3QkFBd0JILG1CQUFPQSxDQUFDO0FBRXBDLElBQUlJLHlCQUF5QkYsdUJBQXVCQztBQUVwRCxJQUFJRSxpQkFBaUJMLG1CQUFPQSxDQUFDO0FBRTdCLElBQUlNLGtCQUFrQkosdUJBQXVCRztBQUU3QyxTQUFTSCx1QkFBdUJOLEdBQUc7SUFBSSxPQUFPQSxPQUFPQSxJQUFJVyxVQUFVLEdBQUdYLE1BQU07UUFBRVksU0FBU1o7SUFBSTtBQUFHO0FBRTlGOzs7R0FHRyxHQUVIOztDQUVDLEdBQ0QsSUFBSWEsbUJBQW1CLEtBQUs7QUFFNUI7Ozs7Ozs7OztDQVNDLEdBRURsQixrQkFBZSxHQUFHLFNBQVVtQixjQUFjO0lBQ3hDLElBQUlDLFVBQVVDLFVBQVVDLE1BQU0sR0FBRyxLQUFLRCxTQUFTLENBQUMsRUFBRSxLQUFLRSxZQUFZRixTQUFTLENBQUMsRUFBRSxHQUFHLENBQUM7SUFDbkYsSUFBSUcsY0FBY0gsVUFBVUMsTUFBTSxHQUFHLEtBQUtELFNBQVMsQ0FBQyxFQUFFLEtBQUtFLFlBQVlGLFNBQVMsQ0FBQyxFQUFFLEdBQUc7SUFFdEYsSUFBSUksVUFBVSxDQUFDLEdBQUdmLFNBQVNPLE9BQU87SUFFbEMsSUFBSSxDQUFDQyxrQkFBa0I7UUFDckJBLG1CQUFtQixDQUFDLEdBQUdMLHVCQUF1QkksT0FBTyxFQUFFUTtJQUN6RDtJQUVBLElBQUlMLFFBQVFNLE1BQU0sRUFBRTtRQUNsQixNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFFQSxJQUFJLE9BQU9SLG1CQUFtQixZQUFZLENBQUNTLFNBQVNDLGNBQWMsQ0FBQ1YsaUJBQWlCO1FBQ2xGLE1BQU0sSUFBSVEsTUFBTSxjQUFjUixpQkFBaUI7SUFDakQ7SUFFQUMsUUFBUU0sTUFBTSxHQUFHWCxnQkFBZ0JFLE9BQU8sQ0FBQ2EsV0FBVyxDQUFDTDtJQUVyRCxJQUFJTSxpQkFBaUIsSUFBSUMsUUFBUSxTQUFVQyxPQUFPO1FBQ2hELElBQUksQ0FBQyxPQUFPZCxtQkFBbUIsY0FBYyxjQUFjakIsUUFBUWlCLGVBQWMsTUFBTyxZQUFZQSxlQUFlZSxTQUFTLFlBQVlDLFVBQVU7WUFDaEosSUFBSUMsU0FBU2pCO1lBRWJjLFFBQVFHO1FBQ1YsT0FBTztZQUNMLDhDQUE4QztZQUM5QyxtREFBbUQ7WUFDbkRsQixpQkFBaUJtQixJQUFJLENBQUMsU0FBVUMsRUFBRTtnQkFDaEMsbURBQW1EO2dCQUNuRCxJQUFJRixTQUFTLElBQUlFLEdBQUdDLE1BQU0sQ0FBQ3BCLGdCQUFnQkM7Z0JBRTNDSyxRQUFRZSxFQUFFLENBQUMsU0FBUztvQkFDbEJQLFFBQVFHO2dCQUNWO2dCQUVBLE9BQU87WUFDVDtRQUNGO0lBQ0Y7SUFFQSxJQUFJSyxZQUFZMUIsZ0JBQWdCRSxPQUFPLENBQUN5QixlQUFlLENBQUNYLGdCQUFnQlA7SUFFeEVpQixVQUFVRCxFQUFFLEdBQUdmLFFBQVFlLEVBQUU7SUFDekJDLFVBQVVFLEdBQUcsR0FBR2xCLFFBQVFrQixHQUFHO0lBRTNCLE9BQU9GO0FBQ1Q7QUFFQUcsT0FBTzVDLE9BQU8sR0FBR0EsT0FBTyxDQUFDLFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb3ZpZS1odWIvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9pbmRleC5qcz85YjYwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX3Npc3RlciA9IHJlcXVpcmUoJ3Npc3RlcicpO1xuXG52YXIgX3Npc3RlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zaXN0ZXIpO1xuXG52YXIgX2xvYWRZb3VUdWJlSWZyYW1lQXBpID0gcmVxdWlyZSgnLi9sb2FkWW91VHViZUlmcmFtZUFwaScpO1xuXG52YXIgX2xvYWRZb3VUdWJlSWZyYW1lQXBpMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2xvYWRZb3VUdWJlSWZyYW1lQXBpKTtcblxudmFyIF9Zb3VUdWJlUGxheWVyID0gcmVxdWlyZSgnLi9Zb3VUdWJlUGxheWVyJyk7XG5cbnZhciBfWW91VHViZVBsYXllcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9Zb3VUdWJlUGxheWVyKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLyoqXG4gKiBAdHlwZWRlZiBZVC5QbGF5ZXJcbiAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20veW91dHViZS9pZnJhbWVfYXBpX3JlZmVyZW5jZVxuICogKi9cblxuLyoqXG4gKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3lvdXR1YmUvaWZyYW1lX2FwaV9yZWZlcmVuY2UjTG9hZGluZ19hX1ZpZGVvX1BsYXllclxuICovXG52YXIgeW91dHViZUlmcmFtZUFQSSA9IHZvaWQgMDtcblxuLyoqXG4gKiBBIGZhY3RvcnkgZnVuY3Rpb24gdXNlZCB0byBwcm9kdWNlIGFuIGluc3RhbmNlIG9mIFlULlBsYXllciBhbmQgcXVldWUgZnVuY3Rpb24gY2FsbHMgYW5kIHByb3h5IGV2ZW50cyBvZiB0aGUgcmVzdWx0aW5nIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0gbWF5YmVFbGVtZW50SWQgRWl0aGVyIEFuIGV4aXN0aW5nIFlULlBsYXllciBpbnN0YW5jZSxcbiAqIHRoZSBET00gZWxlbWVudCBvciB0aGUgaWQgb2YgdGhlIEhUTUwgZWxlbWVudCB3aGVyZSB0aGUgQVBJIHdpbGwgaW5zZXJ0IGFuIDxpZnJhbWU+LlxuICogQHBhcmFtIG9wdGlvbnMgU2VlIGBvcHRpb25zYCAoSWdub3JlZCB3aGVuIHVzaW5nIGFuIGV4aXN0aW5nIFlULlBsYXllciBpbnN0YW5jZSkuXG4gKiBAcGFyYW0gc3RyaWN0U3RhdGUgQSBmbGFnIGRlc2lnbmF0aW5nIHdoZXRoZXIgb3Igbm90IHRvIHdhaXQgZm9yXG4gKiBhbiBhY2NlcHRhYmxlIHN0YXRlIHdoZW4gY2FsbGluZyBzdXBwb3J0ZWQgZnVuY3Rpb25zLiBEZWZhdWx0OiBgZmFsc2VgLlxuICogU2VlIGBGdW5jdGlvblN0YXRlTWFwLmpzYCBmb3Igc3VwcG9ydGVkIGZ1bmN0aW9ucyBhbmQgYWNjZXB0YWJsZSBzdGF0ZXMuXG4gKi9cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKG1heWJlRWxlbWVudElkKSB7XG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgdmFyIHN0cmljdFN0YXRlID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBmYWxzZTtcblxuICB2YXIgZW1pdHRlciA9ICgwLCBfc2lzdGVyMi5kZWZhdWx0KSgpO1xuXG4gIGlmICgheW91dHViZUlmcmFtZUFQSSkge1xuICAgIHlvdXR1YmVJZnJhbWVBUEkgPSAoMCwgX2xvYWRZb3VUdWJlSWZyYW1lQXBpMi5kZWZhdWx0KShlbWl0dGVyKTtcbiAgfVxuXG4gIGlmIChvcHRpb25zLmV2ZW50cykge1xuICAgIHRocm93IG5ldyBFcnJvcignRXZlbnQgaGFuZGxlcnMgY2Fubm90IGJlIG92ZXJ3cml0dGVuLicpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBtYXliZUVsZW1lbnRJZCA9PT0gJ3N0cmluZycgJiYgIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG1heWJlRWxlbWVudElkKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRWxlbWVudCBcIicgKyBtYXliZUVsZW1lbnRJZCArICdcIiBkb2VzIG5vdCBleGlzdC4nKTtcbiAgfVxuXG4gIG9wdGlvbnMuZXZlbnRzID0gX1lvdVR1YmVQbGF5ZXIyLmRlZmF1bHQucHJveHlFdmVudHMoZW1pdHRlcik7XG5cbiAgdmFyIHBsYXllckFQSVJlYWR5ID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICBpZiAoKHR5cGVvZiBtYXliZUVsZW1lbnRJZCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YobWF5YmVFbGVtZW50SWQpKSA9PT0gJ29iamVjdCcgJiYgbWF5YmVFbGVtZW50SWQucGxheVZpZGVvIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgIHZhciBwbGF5ZXIgPSBtYXliZUVsZW1lbnRJZDtcblxuICAgICAgcmVzb2x2ZShwbGF5ZXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBhc3VtZSBtYXliZUVsZW1lbnRJZCBjYW4gYmUgcmVuZGVyZWQgaW5zaWRlXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJvbWlzZS9jYXRjaC1vci1yZXR1cm5cbiAgICAgIHlvdXR1YmVJZnJhbWVBUEkudGhlbihmdW5jdGlvbiAoWVQpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBwcm9taXNlL3ByZWZlci1hd2FpdC10by10aGVuXG4gICAgICAgIHZhciBwbGF5ZXIgPSBuZXcgWVQuUGxheWVyKG1heWJlRWxlbWVudElkLCBvcHRpb25zKTtcblxuICAgICAgICBlbWl0dGVyLm9uKCdyZWFkeScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXNvbHZlKHBsYXllcik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfSk7XG4gICAgfVxuICB9KTtcblxuICB2YXIgcGxheWVyQXBpID0gX1lvdVR1YmVQbGF5ZXIyLmRlZmF1bHQucHJvbWlzaWZ5UGxheWVyKHBsYXllckFQSVJlYWR5LCBzdHJpY3RTdGF0ZSk7XG5cbiAgcGxheWVyQXBpLm9uID0gZW1pdHRlci5vbjtcbiAgcGxheWVyQXBpLm9mZiA9IGVtaXR0ZXIub2ZmO1xuXG4gIHJldHVybiBwbGF5ZXJBcGk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfdHlwZW9mIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJvYmoiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIl9zaXN0ZXIiLCJyZXF1aXJlIiwiX3Npc3RlcjIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2xvYWRZb3VUdWJlSWZyYW1lQXBpIiwiX2xvYWRZb3VUdWJlSWZyYW1lQXBpMiIsIl9Zb3VUdWJlUGxheWVyIiwiX1lvdVR1YmVQbGF5ZXIyIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ5b3V0dWJlSWZyYW1lQVBJIiwibWF5YmVFbGVtZW50SWQiLCJvcHRpb25zIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwic3RyaWN0U3RhdGUiLCJlbWl0dGVyIiwiZXZlbnRzIiwiRXJyb3IiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwicHJveHlFdmVudHMiLCJwbGF5ZXJBUElSZWFkeSIsIlByb21pc2UiLCJyZXNvbHZlIiwicGxheVZpZGVvIiwiRnVuY3Rpb24iLCJwbGF5ZXIiLCJ0aGVuIiwiWVQiLCJQbGF5ZXIiLCJvbiIsInBsYXllckFwaSIsInByb21pc2lmeVBsYXllciIsIm9mZiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/dist/loadYouTubeIframeApi.js":
/*!******************************************************************!*\
  !*** ./node_modules/youtube-player/dist/loadYouTubeIframeApi.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _loadScript = __webpack_require__(/*! load-script */ \"(ssr)/./node_modules/load-script/index.js\");\nvar _loadScript2 = _interopRequireDefault(_loadScript);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nexports[\"default\"] = function(emitter) {\n    /**\n   * A promise that is resolved when window.onYouTubeIframeAPIReady is called.\n   * The promise is resolved with a reference to window.YT object.\n   */ var iframeAPIReady = new Promise(function(resolve) {\n        if (window.YT && window.YT.Player && window.YT.Player instanceof Function) {\n            resolve(window.YT);\n            return;\n        } else {\n            var protocol = window.location.protocol === \"http:\" ? \"http:\" : \"https:\";\n            (0, _loadScript2.default)(protocol + \"//www.youtube.com/iframe_api\", function(error) {\n                if (error) {\n                    emitter.trigger(\"error\", error);\n                }\n            });\n        }\n        var previous = window.onYouTubeIframeAPIReady;\n        // The API will call this function when page has finished downloading\n        // the JavaScript for the player API.\n        window.onYouTubeIframeAPIReady = function() {\n            if (previous) {\n                previous();\n            }\n            resolve(window.YT);\n        };\n    });\n    return iframeAPIReady;\n};\nmodule.exports = exports[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9sb2FkWW91VHViZUlmcmFtZUFwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFFRixJQUFJQyxjQUFjQyxtQkFBT0EsQ0FBQztBQUUxQixJQUFJQyxlQUFlQyx1QkFBdUJIO0FBRTFDLFNBQVNHLHVCQUF1QkMsR0FBRztJQUFJLE9BQU9BLE9BQU9BLElBQUlDLFVBQVUsR0FBR0QsTUFBTTtRQUFFRSxTQUFTRjtJQUFJO0FBQUc7QUFFOUZOLGtCQUFlLEdBQUcsU0FBVVMsT0FBTztJQUNqQzs7O0dBR0MsR0FDRCxJQUFJQyxpQkFBaUIsSUFBSUMsUUFBUSxTQUFVQyxPQUFPO1FBQ2hELElBQUlDLE9BQU9DLEVBQUUsSUFBSUQsT0FBT0MsRUFBRSxDQUFDQyxNQUFNLElBQUlGLE9BQU9DLEVBQUUsQ0FBQ0MsTUFBTSxZQUFZQyxVQUFVO1lBQ3pFSixRQUFRQyxPQUFPQyxFQUFFO1lBRWpCO1FBQ0YsT0FBTztZQUNMLElBQUlHLFdBQVdKLE9BQU9LLFFBQVEsQ0FBQ0QsUUFBUSxLQUFLLFVBQVUsVUFBVTtZQUUvRCxJQUFHYixhQUFhSSxPQUFPLEVBQUVTLFdBQVcsZ0NBQWdDLFNBQVVFLEtBQUs7Z0JBQ2xGLElBQUlBLE9BQU87b0JBQ1RWLFFBQVFXLE9BQU8sQ0FBQyxTQUFTRDtnQkFDM0I7WUFDRjtRQUNGO1FBRUEsSUFBSUUsV0FBV1IsT0FBT1MsdUJBQXVCO1FBRTdDLHFFQUFxRTtRQUNyRSxxQ0FBcUM7UUFDckNULE9BQU9TLHVCQUF1QixHQUFHO1lBQy9CLElBQUlELFVBQVU7Z0JBQ1pBO1lBQ0Y7WUFFQVQsUUFBUUMsT0FBT0MsRUFBRTtRQUNuQjtJQUNGO0lBRUEsT0FBT0o7QUFDVDtBQUVBYSxPQUFPdkIsT0FBTyxHQUFHQSxPQUFPLENBQUMsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL21vdmllLWh1Yi8uL25vZGVfbW9kdWxlcy95b3V0dWJlLXBsYXllci9kaXN0L2xvYWRZb3VUdWJlSWZyYW1lQXBpLmpzP2JjMzQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2xvYWRTY3JpcHQgPSByZXF1aXJlKCdsb2FkLXNjcmlwdCcpO1xuXG52YXIgX2xvYWRTY3JpcHQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbG9hZFNjcmlwdCk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChlbWl0dGVyKSB7XG4gIC8qKlxuICAgKiBBIHByb21pc2UgdGhhdCBpcyByZXNvbHZlZCB3aGVuIHdpbmRvdy5vbllvdVR1YmVJZnJhbWVBUElSZWFkeSBpcyBjYWxsZWQuXG4gICAqIFRoZSBwcm9taXNlIGlzIHJlc29sdmVkIHdpdGggYSByZWZlcmVuY2UgdG8gd2luZG93LllUIG9iamVjdC5cbiAgICovXG4gIHZhciBpZnJhbWVBUElSZWFkeSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgaWYgKHdpbmRvdy5ZVCAmJiB3aW5kb3cuWVQuUGxheWVyICYmIHdpbmRvdy5ZVC5QbGF5ZXIgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xuICAgICAgcmVzb2x2ZSh3aW5kb3cuWVQpO1xuXG4gICAgICByZXR1cm47XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBwcm90b2NvbCA9IHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCA9PT0gJ2h0dHA6JyA/ICdodHRwOicgOiAnaHR0cHM6JztcblxuICAgICAgKDAsIF9sb2FkU2NyaXB0Mi5kZWZhdWx0KShwcm90b2NvbCArICcvL3d3dy55b3V0dWJlLmNvbS9pZnJhbWVfYXBpJywgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIGVtaXR0ZXIudHJpZ2dlcignZXJyb3InLCBlcnJvcik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHZhciBwcmV2aW91cyA9IHdpbmRvdy5vbllvdVR1YmVJZnJhbWVBUElSZWFkeTtcblxuICAgIC8vIFRoZSBBUEkgd2lsbCBjYWxsIHRoaXMgZnVuY3Rpb24gd2hlbiBwYWdlIGhhcyBmaW5pc2hlZCBkb3dubG9hZGluZ1xuICAgIC8vIHRoZSBKYXZhU2NyaXB0IGZvciB0aGUgcGxheWVyIEFQSS5cbiAgICB3aW5kb3cub25Zb3VUdWJlSWZyYW1lQVBJUmVhZHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocHJldmlvdXMpIHtcbiAgICAgICAgcHJldmlvdXMoKTtcbiAgICAgIH1cblxuICAgICAgcmVzb2x2ZSh3aW5kb3cuWVQpO1xuICAgIH07XG4gIH0pO1xuXG4gIHJldHVybiBpZnJhbWVBUElSZWFkeTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9sb2FkU2NyaXB0IiwicmVxdWlyZSIsIl9sb2FkU2NyaXB0MiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImVtaXR0ZXIiLCJpZnJhbWVBUElSZWFkeSIsIlByb21pc2UiLCJyZXNvbHZlIiwid2luZG93IiwiWVQiLCJQbGF5ZXIiLCJGdW5jdGlvbiIsInByb3RvY29sIiwibG9jYXRpb24iLCJlcnJvciIsInRyaWdnZXIiLCJwcmV2aW91cyIsIm9uWW91VHViZUlmcmFtZUFQSVJlYWR5IiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/dist/loadYouTubeIframeApi.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/node_modules/debug/src/browser.js":
/*!***********************************************************************!*\
  !*** ./node_modules/youtube-player/node_modules/debug/src/browser.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */ \nexports = module.exports = __webpack_require__(/*! ./debug */ \"(ssr)/./node_modules/youtube-player/node_modules/debug/src/debug.js\");\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = \"undefined\" != typeof chrome && \"undefined\" != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */ exports.colors = [\n    \"lightseagreen\",\n    \"forestgreen\",\n    \"goldenrod\",\n    \"dodgerblue\",\n    \"darkorchid\",\n    \"crimson\"\n];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */ function useColors() {\n    // NB: In an Electron preload script, document will be defined but not fully\n    // initialized. Since we know we're in Chrome, we'll just detect this case\n    // explicitly\n    if (false) {}\n    // is webkit? http://stackoverflow.com/a/16459606/376773\n    // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n    return typeof document !== \"undefined\" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n     false && (0) || // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    typeof navigator !== \"undefined\" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n    typeof navigator !== \"undefined\" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */ exports.formatters.j = function(v) {\n    try {\n        return JSON.stringify(v);\n    } catch (err) {\n        return \"[UnexpectedJSONParseError]: \" + err.message;\n    }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */ function formatArgs(args) {\n    var useColors = this.useColors;\n    args[0] = (useColors ? \"%c\" : \"\") + this.namespace + (useColors ? \" %c\" : \" \") + args[0] + (useColors ? \"%c \" : \" \") + \"+\" + exports.humanize(this.diff);\n    if (!useColors) return;\n    var c = \"color: \" + this.color;\n    args.splice(1, 0, c, \"color: inherit\");\n    // the final \"%c\" is somewhat tricky, because there could be other\n    // arguments passed either before or after the %c, so we need to\n    // figure out the correct index to insert the CSS into\n    var index = 0;\n    var lastC = 0;\n    args[0].replace(/%[a-zA-Z%]/g, function(match) {\n        if (\"%%\" === match) return;\n        index++;\n        if (\"%c\" === match) {\n            // we only are interested in the *last* %c\n            // (the user may have provided their own)\n            lastC = index;\n        }\n    });\n    args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */ function log() {\n    // this hackery is required for IE8/9, where\n    // the `console.log` function doesn't have 'apply'\n    return \"object\" === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */ function save(namespaces) {\n    try {\n        if (null == namespaces) {\n            exports.storage.removeItem(\"debug\");\n        } else {\n            exports.storage.debug = namespaces;\n        }\n    } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */ function load() {\n    var r;\n    try {\n        r = exports.storage.debug;\n    } catch (e) {}\n    // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n    if (!r && typeof process !== \"undefined\" && \"env\" in process) {\n        r = process.env.DEBUG;\n    }\n    return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */ exports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */ function localstorage() {\n    try {\n        return window.localStorage;\n    } catch (e) {}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/node_modules/debug/src/browser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/node_modules/debug/src/debug.js":
/*!*********************************************************************!*\
  !*** ./node_modules/youtube-player/node_modules/debug/src/debug.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */ \nexports = module.exports = createDebug.debug = createDebug[\"default\"] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(/*! ms */ \"(ssr)/./node_modules/youtube-player/node_modules/ms/index.js\");\n/**\n * The currently active debug mode names, and names to skip.\n */ exports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */ exports.formatters = {};\n/**\n * Previous log timestamp.\n */ var prevTime;\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */ function selectColor(namespace) {\n    var hash = 0, i;\n    for(i in namespace){\n        hash = (hash << 5) - hash + namespace.charCodeAt(i);\n        hash |= 0; // Convert to 32bit integer\n    }\n    return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */ function createDebug(namespace) {\n    function debug() {\n        // disabled?\n        if (!debug.enabled) return;\n        var self = debug;\n        // set `diff` timestamp\n        var curr = +new Date();\n        var ms = curr - (prevTime || curr);\n        self.diff = ms;\n        self.prev = prevTime;\n        self.curr = curr;\n        prevTime = curr;\n        // turn the `arguments` into a proper Array\n        var args = new Array(arguments.length);\n        for(var i = 0; i < args.length; i++){\n            args[i] = arguments[i];\n        }\n        args[0] = exports.coerce(args[0]);\n        if (\"string\" !== typeof args[0]) {\n            // anything else let's inspect with %O\n            args.unshift(\"%O\");\n        }\n        // apply any `formatters` transformations\n        var index = 0;\n        args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n            // if we encounter an escaped % then don't increase the array index\n            if (match === \"%%\") return match;\n            index++;\n            var formatter = exports.formatters[format];\n            if (\"function\" === typeof formatter) {\n                var val = args[index];\n                match = formatter.call(self, val);\n                // now we need to remove `args[index]` since it's inlined in the `format`\n                args.splice(index, 1);\n                index--;\n            }\n            return match;\n        });\n        // apply env-specific formatting (colors, etc.)\n        exports.formatArgs.call(self, args);\n        var logFn = debug.log || exports.log || console.log.bind(console);\n        logFn.apply(self, args);\n    }\n    debug.namespace = namespace;\n    debug.enabled = exports.enabled(namespace);\n    debug.useColors = exports.useColors();\n    debug.color = selectColor(namespace);\n    // env-specific initialization logic for debug instances\n    if (\"function\" === typeof exports.init) {\n        exports.init(debug);\n    }\n    return debug;\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */ function enable(namespaces) {\n    exports.save(namespaces);\n    exports.names = [];\n    exports.skips = [];\n    var split = (typeof namespaces === \"string\" ? namespaces : \"\").split(/[\\s,]+/);\n    var len = split.length;\n    for(var i = 0; i < len; i++){\n        if (!split[i]) continue; // ignore empty strings\n        namespaces = split[i].replace(/\\*/g, \".*?\");\n        if (namespaces[0] === \"-\") {\n            exports.skips.push(new RegExp(\"^\" + namespaces.substr(1) + \"$\"));\n        } else {\n            exports.names.push(new RegExp(\"^\" + namespaces + \"$\"));\n        }\n    }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */ function disable() {\n    exports.enable(\"\");\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */ function enabled(name) {\n    var i, len;\n    for(i = 0, len = exports.skips.length; i < len; i++){\n        if (exports.skips[i].test(name)) {\n            return false;\n        }\n    }\n    for(i = 0, len = exports.names.length; i < len; i++){\n        if (exports.names[i].test(name)) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */ function coerce(val) {\n    if (val instanceof Error) return val.stack || val.message;\n    return val;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/node_modules/debug/src/debug.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/node_modules/debug/src/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/youtube-player/node_modules/debug/src/index.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */ \nif (typeof process !== \"undefined\" && process.type === \"renderer\") {\n    module.exports = __webpack_require__(/*! ./browser.js */ \"(ssr)/./node_modules/youtube-player/node_modules/debug/src/browser.js\");\n} else {\n    module.exports = __webpack_require__(/*! ./node.js */ \"(ssr)/./node_modules/youtube-player/node_modules/debug/src/node.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvbm9kZV9tb2R1bGVzL2RlYnVnL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7O0NBR0M7QUFFRCxJQUFJLE9BQU9BLFlBQVksZUFBZUEsUUFBUUMsSUFBSSxLQUFLLFlBQVk7SUFDakVDLGlJQUF5QjtBQUMzQixPQUFPO0lBQ0xBLDJIQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL21vdmllLWh1Yi8uL25vZGVfbW9kdWxlcy95b3V0dWJlLXBsYXllci9ub2RlX21vZHVsZXMvZGVidWcvc3JjL2luZGV4LmpzPzQ1MWMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBEZXRlY3QgRWxlY3Ryb24gcmVuZGVyZXIgcHJvY2Vzcywgd2hpY2ggaXMgbm9kZSwgYnV0IHdlIHNob3VsZFxuICogdHJlYXQgYXMgYSBicm93c2VyLlxuICovXG5cbmlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgcHJvY2Vzcy50eXBlID09PSAncmVuZGVyZXInKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9icm93c2VyLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbm9kZS5qcycpO1xufVxuIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJ0eXBlIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/node_modules/debug/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/node_modules/debug/src/node.js":
/*!********************************************************************!*\
  !*** ./node_modules/youtube-player/node_modules/debug/src/node.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/**\n * Module dependencies.\n */ \nvar tty = __webpack_require__(/*! tty */ \"tty\");\nvar util = __webpack_require__(/*! util */ \"util\");\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */ exports = module.exports = __webpack_require__(/*! ./debug */ \"(ssr)/./node_modules/youtube-player/node_modules/debug/src/debug.js\");\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\n * Colors.\n */ exports.colors = [\n    6,\n    2,\n    3,\n    4,\n    5,\n    1\n];\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */ exports.inspectOpts = Object.keys(process.env).filter(function(key) {\n    return /^debug_/i.test(key);\n}).reduce(function(obj, key) {\n    // camel-case\n    var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function(_, k) {\n        return k.toUpperCase();\n    });\n    // coerce string value into JS value\n    var val = process.env[key];\n    if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n    else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n    else if (val === \"null\") val = null;\n    else val = Number(val);\n    obj[prop] = val;\n    return obj;\n}, {});\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */ var fd = parseInt(process.env.DEBUG_FD, 10) || 2;\nif (1 !== fd && 2 !== fd) {\n    util.deprecate(function() {}, \"except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)\")();\n}\nvar stream = 1 === fd ? process.stdout : 2 === fd ? process.stderr : createWritableStdioStream(fd);\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */ function useColors() {\n    return \"colors\" in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(fd);\n}\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */ exports.formatters.o = function(v) {\n    this.inspectOpts.colors = this.useColors;\n    return util.inspect(v, this.inspectOpts).split(\"\\n\").map(function(str) {\n        return str.trim();\n    }).join(\" \");\n};\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */ exports.formatters.O = function(v) {\n    this.inspectOpts.colors = this.useColors;\n    return util.inspect(v, this.inspectOpts);\n};\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */ function formatArgs(args) {\n    var name = this.namespace;\n    var useColors = this.useColors;\n    if (useColors) {\n        var c = this.color;\n        var prefix = \"  \\x1b[3\" + c + \";1m\" + name + \" \" + \"\\x1b[0m\";\n        args[0] = prefix + args[0].split(\"\\n\").join(\"\\n\" + prefix);\n        args.push(\"\\x1b[3\" + c + \"m+\" + exports.humanize(this.diff) + \"\\x1b[0m\");\n    } else {\n        args[0] = new Date().toUTCString() + \" \" + name + \" \" + args[0];\n    }\n}\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */ function log() {\n    return stream.write(util.format.apply(util, arguments) + \"\\n\");\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */ function save(namespaces) {\n    if (null == namespaces) {\n        // If you set a process.env field to null or undefined, it gets cast to the\n        // string 'null' or 'undefined'. Just delete instead.\n        delete process.env.DEBUG;\n    } else {\n        process.env.DEBUG = namespaces;\n    }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */ function load() {\n    return process.env.DEBUG;\n}\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */ function createWritableStdioStream(fd) {\n    var stream;\n    var tty_wrap = process.binding(\"tty_wrap\");\n    // Note stream._type is used for test-module-load-list.js\n    switch(tty_wrap.guessHandleType(fd)){\n        case \"TTY\":\n            stream = new tty.WriteStream(fd);\n            stream._type = \"tty\";\n            // Hack to have stream not keep the event loop alive.\n            // See https://github.com/joyent/node/issues/1726\n            if (stream._handle && stream._handle.unref) {\n                stream._handle.unref();\n            }\n            break;\n        case \"FILE\":\n            var fs = __webpack_require__(/*! fs */ \"fs\");\n            stream = new fs.SyncWriteStream(fd, {\n                autoClose: false\n            });\n            stream._type = \"fs\";\n            break;\n        case \"PIPE\":\n        case \"TCP\":\n            var net = __webpack_require__(/*! net */ \"net\");\n            stream = new net.Socket({\n                fd: fd,\n                readable: false,\n                writable: true\n            });\n            // FIXME Should probably have an option in net.Socket to create a\n            // stream from an existing fd which is writable only. But for now\n            // we'll just add this hack and set the `readable` member to false.\n            // Test: ./node test/fixtures/echo.js < /etc/passwd\n            stream.readable = false;\n            stream.read = null;\n            stream._type = \"pipe\";\n            // FIXME Hack to have stream not keep the event loop alive.\n            // See https://github.com/joyent/node/issues/1726\n            if (stream._handle && stream._handle.unref) {\n                stream._handle.unref();\n            }\n            break;\n        default:\n            // Probably an error on in uv_guess_handle()\n            throw new Error(\"Implement me. Unknown stream file type!\");\n    }\n    // For supporting legacy API we put the FD here.\n    stream.fd = fd;\n    stream._isStdio = true;\n    return stream;\n}\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */ function init(debug) {\n    debug.inspectOpts = {};\n    var keys = Object.keys(exports.inspectOpts);\n    for(var i = 0; i < keys.length; i++){\n        debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n    }\n}\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */ exports.enable(load());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/node_modules/debug/src/node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/node_modules/ms/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/youtube-player/node_modules/ms/index.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("/**\n * Helpers.\n */ \nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */ module.exports = function(val, options) {\n    options = options || {};\n    var type = typeof val;\n    if (type === \"string\" && val.length > 0) {\n        return parse(val);\n    } else if (type === \"number\" && isNaN(val) === false) {\n        return options.long ? fmtLong(val) : fmtShort(val);\n    }\n    throw new Error(\"val is not a non-empty string or a valid number. val=\" + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */ function parse(str) {\n    str = String(str);\n    if (str.length > 100) {\n        return;\n    }\n    var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n    if (!match) {\n        return;\n    }\n    var n = parseFloat(match[1]);\n    var type = (match[2] || \"ms\").toLowerCase();\n    switch(type){\n        case \"years\":\n        case \"year\":\n        case \"yrs\":\n        case \"yr\":\n        case \"y\":\n            return n * y;\n        case \"days\":\n        case \"day\":\n        case \"d\":\n            return n * d;\n        case \"hours\":\n        case \"hour\":\n        case \"hrs\":\n        case \"hr\":\n        case \"h\":\n            return n * h;\n        case \"minutes\":\n        case \"minute\":\n        case \"mins\":\n        case \"min\":\n        case \"m\":\n            return n * m;\n        case \"seconds\":\n        case \"second\":\n        case \"secs\":\n        case \"sec\":\n        case \"s\":\n            return n * s;\n        case \"milliseconds\":\n        case \"millisecond\":\n        case \"msecs\":\n        case \"msec\":\n        case \"ms\":\n            return n;\n        default:\n            return undefined;\n    }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */ function fmtShort(ms) {\n    if (ms >= d) {\n        return Math.round(ms / d) + \"d\";\n    }\n    if (ms >= h) {\n        return Math.round(ms / h) + \"h\";\n    }\n    if (ms >= m) {\n        return Math.round(ms / m) + \"m\";\n    }\n    if (ms >= s) {\n        return Math.round(ms / s) + \"s\";\n    }\n    return ms + \"ms\";\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */ function fmtLong(ms) {\n    return plural(ms, d, \"day\") || plural(ms, h, \"hour\") || plural(ms, m, \"minute\") || plural(ms, s, \"second\") || ms + \" ms\";\n}\n/**\n * Pluralization helper.\n */ function plural(ms, n, name) {\n    if (ms < n) {\n        return;\n    }\n    if (ms < n * 1.5) {\n        return Math.floor(ms / n) + \" \" + name;\n    }\n    return Math.ceil(ms / n) + \" \" + name + \"s\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvbm9kZV9tb2R1bGVzL21zL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBOztDQUVDO0FBRUQsSUFBSUEsSUFBSTtBQUNSLElBQUlDLElBQUlELElBQUk7QUFDWixJQUFJRSxJQUFJRCxJQUFJO0FBQ1osSUFBSUUsSUFBSUQsSUFBSTtBQUNaLElBQUlFLElBQUlELElBQUk7QUFFWjs7Ozs7Ozs7Ozs7O0NBWUMsR0FFREUsT0FBT0MsT0FBTyxHQUFHLFNBQVNDLEdBQUcsRUFBRUMsT0FBTztJQUNwQ0EsVUFBVUEsV0FBVyxDQUFDO0lBQ3RCLElBQUlDLE9BQU8sT0FBT0Y7SUFDbEIsSUFBSUUsU0FBUyxZQUFZRixJQUFJRyxNQUFNLEdBQUcsR0FBRztRQUN2QyxPQUFPQyxNQUFNSjtJQUNmLE9BQU8sSUFBSUUsU0FBUyxZQUFZRyxNQUFNTCxTQUFTLE9BQU87UUFDcEQsT0FBT0MsUUFBUUssSUFBSSxHQUFHQyxRQUFRUCxPQUFPUSxTQUFTUjtJQUNoRDtJQUNBLE1BQU0sSUFBSVMsTUFDUiwwREFDRUMsS0FBS0MsU0FBUyxDQUFDWDtBQUVyQjtBQUVBOzs7Ozs7Q0FNQyxHQUVELFNBQVNJLE1BQU1RLEdBQUc7SUFDaEJBLE1BQU1DLE9BQU9EO0lBQ2IsSUFBSUEsSUFBSVQsTUFBTSxHQUFHLEtBQUs7UUFDcEI7SUFDRjtJQUNBLElBQUlXLFFBQVEsd0hBQXdIQyxJQUFJLENBQ3RJSDtJQUVGLElBQUksQ0FBQ0UsT0FBTztRQUNWO0lBQ0Y7SUFDQSxJQUFJRSxJQUFJQyxXQUFXSCxLQUFLLENBQUMsRUFBRTtJQUMzQixJQUFJWixPQUFPLENBQUNZLEtBQUssQ0FBQyxFQUFFLElBQUksSUFBRyxFQUFHSSxXQUFXO0lBQ3pDLE9BQVFoQjtRQUNOLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT2MsSUFBSW5CO1FBQ2IsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT21CLElBQUlwQjtRQUNiLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT29CLElBQUlyQjtRQUNiLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT3FCLElBQUl0QjtRQUNiLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT3NCLElBQUl2QjtRQUNiLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT3VCO1FBQ1Q7WUFDRSxPQUFPRztJQUNYO0FBQ0Y7QUFFQTs7Ozs7O0NBTUMsR0FFRCxTQUFTWCxTQUFTWSxFQUFFO0lBQ2xCLElBQUlBLE1BQU14QixHQUFHO1FBQ1gsT0FBT3lCLEtBQUtDLEtBQUssQ0FBQ0YsS0FBS3hCLEtBQUs7SUFDOUI7SUFDQSxJQUFJd0IsTUFBTXpCLEdBQUc7UUFDWCxPQUFPMEIsS0FBS0MsS0FBSyxDQUFDRixLQUFLekIsS0FBSztJQUM5QjtJQUNBLElBQUl5QixNQUFNMUIsR0FBRztRQUNYLE9BQU8yQixLQUFLQyxLQUFLLENBQUNGLEtBQUsxQixLQUFLO0lBQzlCO0lBQ0EsSUFBSTBCLE1BQU0zQixHQUFHO1FBQ1gsT0FBTzRCLEtBQUtDLEtBQUssQ0FBQ0YsS0FBSzNCLEtBQUs7SUFDOUI7SUFDQSxPQUFPMkIsS0FBSztBQUNkO0FBRUE7Ozs7OztDQU1DLEdBRUQsU0FBU2IsUUFBUWEsRUFBRTtJQUNqQixPQUFPRyxPQUFPSCxJQUFJeEIsR0FBRyxVQUNuQjJCLE9BQU9ILElBQUl6QixHQUFHLFdBQ2Q0QixPQUFPSCxJQUFJMUIsR0FBRyxhQUNkNkIsT0FBT0gsSUFBSTNCLEdBQUcsYUFDZDJCLEtBQUs7QUFDVDtBQUVBOztDQUVDLEdBRUQsU0FBU0csT0FBT0gsRUFBRSxFQUFFSixDQUFDLEVBQUVRLElBQUk7SUFDekIsSUFBSUosS0FBS0osR0FBRztRQUNWO0lBQ0Y7SUFDQSxJQUFJSSxLQUFLSixJQUFJLEtBQUs7UUFDaEIsT0FBT0ssS0FBS0ksS0FBSyxDQUFDTCxLQUFLSixLQUFLLE1BQU1RO0lBQ3BDO0lBQ0EsT0FBT0gsS0FBS0ssSUFBSSxDQUFDTixLQUFLSixLQUFLLE1BQU1RLE9BQU87QUFDMUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb3ZpZS1odWIvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvbm9kZV9tb2R1bGVzL21zL2luZGV4LmpzP2ZmYjciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBIZWxwZXJzLlxuICovXG5cbnZhciBzID0gMTAwMDtcbnZhciBtID0gcyAqIDYwO1xudmFyIGggPSBtICogNjA7XG52YXIgZCA9IGggKiAyNDtcbnZhciB5ID0gZCAqIDM2NS4yNTtcblxuLyoqXG4gKiBQYXJzZSBvciBmb3JtYXQgdGhlIGdpdmVuIGB2YWxgLlxuICpcbiAqIE9wdGlvbnM6XG4gKlxuICogIC0gYGxvbmdgIHZlcmJvc2UgZm9ybWF0dGluZyBbZmFsc2VdXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8TnVtYmVyfSB2YWxcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAqIEB0aHJvd3Mge0Vycm9yfSB0aHJvdyBhbiBlcnJvciBpZiB2YWwgaXMgbm90IGEgbm9uLWVtcHR5IHN0cmluZyBvciBhIG51bWJlclxuICogQHJldHVybiB7U3RyaW5nfE51bWJlcn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih2YWwsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbDtcbiAgaWYgKHR5cGUgPT09ICdzdHJpbmcnICYmIHZhbC5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuIHBhcnNlKHZhbCk7XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gJ251bWJlcicgJiYgaXNOYU4odmFsKSA9PT0gZmFsc2UpIHtcbiAgICByZXR1cm4gb3B0aW9ucy5sb25nID8gZm10TG9uZyh2YWwpIDogZm10U2hvcnQodmFsKTtcbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgJ3ZhbCBpcyBub3QgYSBub24tZW1wdHkgc3RyaW5nIG9yIGEgdmFsaWQgbnVtYmVyLiB2YWw9JyArXG4gICAgICBKU09OLnN0cmluZ2lmeSh2YWwpXG4gICk7XG59O1xuXG4vKipcbiAqIFBhcnNlIHRoZSBnaXZlbiBgc3RyYCBhbmQgcmV0dXJuIG1pbGxpc2Vjb25kcy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtOdW1iZXJ9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZShzdHIpIHtcbiAgc3RyID0gU3RyaW5nKHN0cik7XG4gIGlmIChzdHIubGVuZ3RoID4gMTAwKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBtYXRjaCA9IC9eKCg/OlxcZCspP1xcLj9cXGQrKSAqKG1pbGxpc2Vjb25kcz98bXNlY3M/fG1zfHNlY29uZHM/fHNlY3M/fHN8bWludXRlcz98bWlucz98bXxob3Vycz98aHJzP3xofGRheXM/fGR8eWVhcnM/fHlycz98eSk/JC9pLmV4ZWMoXG4gICAgc3RyXG4gICk7XG4gIGlmICghbWF0Y2gpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIG4gPSBwYXJzZUZsb2F0KG1hdGNoWzFdKTtcbiAgdmFyIHR5cGUgPSAobWF0Y2hbMl0gfHwgJ21zJykudG9Mb3dlckNhc2UoKTtcbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSAneWVhcnMnOlxuICAgIGNhc2UgJ3llYXInOlxuICAgIGNhc2UgJ3lycyc6XG4gICAgY2FzZSAneXInOlxuICAgIGNhc2UgJ3knOlxuICAgICAgcmV0dXJuIG4gKiB5O1xuICAgIGNhc2UgJ2RheXMnOlxuICAgIGNhc2UgJ2RheSc6XG4gICAgY2FzZSAnZCc6XG4gICAgICByZXR1cm4gbiAqIGQ7XG4gICAgY2FzZSAnaG91cnMnOlxuICAgIGNhc2UgJ2hvdXInOlxuICAgIGNhc2UgJ2hycyc6XG4gICAgY2FzZSAnaHInOlxuICAgIGNhc2UgJ2gnOlxuICAgICAgcmV0dXJuIG4gKiBoO1xuICAgIGNhc2UgJ21pbnV0ZXMnOlxuICAgIGNhc2UgJ21pbnV0ZSc6XG4gICAgY2FzZSAnbWlucyc6XG4gICAgY2FzZSAnbWluJzpcbiAgICBjYXNlICdtJzpcbiAgICAgIHJldHVybiBuICogbTtcbiAgICBjYXNlICdzZWNvbmRzJzpcbiAgICBjYXNlICdzZWNvbmQnOlxuICAgIGNhc2UgJ3NlY3MnOlxuICAgIGNhc2UgJ3NlYyc6XG4gICAgY2FzZSAncyc6XG4gICAgICByZXR1cm4gbiAqIHM7XG4gICAgY2FzZSAnbWlsbGlzZWNvbmRzJzpcbiAgICBjYXNlICdtaWxsaXNlY29uZCc6XG4gICAgY2FzZSAnbXNlY3MnOlxuICAgIGNhc2UgJ21zZWMnOlxuICAgIGNhc2UgJ21zJzpcbiAgICAgIHJldHVybiBuO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG5cbi8qKlxuICogU2hvcnQgZm9ybWF0IGZvciBgbXNgLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBtc1xuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZm10U2hvcnQobXMpIHtcbiAgaWYgKG1zID49IGQpIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIGQpICsgJ2QnO1xuICB9XG4gIGlmIChtcyA+PSBoKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBoKSArICdoJztcbiAgfVxuICBpZiAobXMgPj0gbSkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gbSkgKyAnbSc7XG4gIH1cbiAgaWYgKG1zID49IHMpIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIHMpICsgJ3MnO1xuICB9XG4gIHJldHVybiBtcyArICdtcyc7XG59XG5cbi8qKlxuICogTG9uZyBmb3JtYXQgZm9yIGBtc2AuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IG1zXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBmbXRMb25nKG1zKSB7XG4gIHJldHVybiBwbHVyYWwobXMsIGQsICdkYXknKSB8fFxuICAgIHBsdXJhbChtcywgaCwgJ2hvdXInKSB8fFxuICAgIHBsdXJhbChtcywgbSwgJ21pbnV0ZScpIHx8XG4gICAgcGx1cmFsKG1zLCBzLCAnc2Vjb25kJykgfHxcbiAgICBtcyArICcgbXMnO1xufVxuXG4vKipcbiAqIFBsdXJhbGl6YXRpb24gaGVscGVyLlxuICovXG5cbmZ1bmN0aW9uIHBsdXJhbChtcywgbiwgbmFtZSkge1xuICBpZiAobXMgPCBuKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChtcyA8IG4gKiAxLjUpIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihtcyAvIG4pICsgJyAnICsgbmFtZTtcbiAgfVxuICByZXR1cm4gTWF0aC5jZWlsKG1zIC8gbikgKyAnICcgKyBuYW1lICsgJ3MnO1xufVxuIl0sIm5hbWVzIjpbInMiLCJtIiwiaCIsImQiLCJ5IiwibW9kdWxlIiwiZXhwb3J0cyIsInZhbCIsIm9wdGlvbnMiLCJ0eXBlIiwibGVuZ3RoIiwicGFyc2UiLCJpc05hTiIsImxvbmciLCJmbXRMb25nIiwiZm10U2hvcnQiLCJFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJzdHIiLCJTdHJpbmciLCJtYXRjaCIsImV4ZWMiLCJuIiwicGFyc2VGbG9hdCIsInRvTG93ZXJDYXNlIiwidW5kZWZpbmVkIiwibXMiLCJNYXRoIiwicm91bmQiLCJwbHVyYWwiLCJuYW1lIiwiZmxvb3IiLCJjZWlsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/node_modules/ms/index.js\n");

/***/ })

};
;